{"version":3,"file":"static/js/644.aecb71f2.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/constants/src.ts/strings.ts","../node_modules/ethers/src.ts/_version.ts","../node_modules/ethers/src.ts/ethers.ts","../node_modules/@wagmi/core/dist/rpcs-b4aa70b9.esm.js","../node_modules/@wagmi/core/dist/chains-1ebc77f8.esm.js","../node_modules/@wagmi/core/dist/getProvider-2ff978f9.esm.js","../node_modules/@wagmi/core/dist/wagmi-core.esm.js","../node_modules/@wagmi/core/dist/debounce-0862bf88.esm.js","../node_modules/@wagmi/core/connectors/coinbaseWallet/dist/wagmi-core-connectors-coinbaseWallet.esm.js","../node_modules/@wagmi/core/connectors/metaMask/dist/wagmi-core-connectors-metaMask.esm.js","../node_modules/@wagmi/core/connectors/walletConnect/dist/wagmi-core-connectors-walletConnect.esm.js","../node_modules/@wagmi/core/providers/jsonRpc/dist/wagmi-core-providers-jsonRpc.esm.js","../node_modules/@web3modal/ethereum/src/utils/chains.ts","../node_modules/@web3modal/ethereum/src/utils/constants.ts","../node_modules/@web3modal/ethereum/src/utils/wagmiTools.ts","../node_modules/@wagmi/core/providers/alchemy/dist/wagmi-core-providers-alchemy.esm.js","../node_modules/@wagmi/core/providers/infura/dist/wagmi-core-providers-infura.esm.js","../node_modules/@wagmi/core/providers/public/dist/wagmi-core-providers-public.esm.js","../node_modules/@web3modal/ethereum/src/utils/wagmiHelpers.ts","../node_modules/@web3modal/ethereum/src/api.ts"],"sourcesContent":["// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n","export const version = \"ethers/5.7.2\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n","const defaultAlchemyApiKey = '_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC';\nconst defaultInfuraApiKey = '84842078b09946638c03157f83405213';\nconst alchemyRpcUrls = {\n  mainnet: 'https://eth-mainnet.alchemyapi.io/v2',\n  ropsten: 'https://eth-ropsten.alchemyapi.io/v2',\n  rinkeby: 'https://eth-rinkeby.alchemyapi.io/v2',\n  goerli: 'https://eth-goerli.alchemyapi.io/v2',\n  kovan: 'https://eth-kovan.alchemyapi.io/v2',\n  optimism: 'https://opt-mainnet.g.alchemy.com/v2',\n  optimismKovan: 'https://opt-kovan.g.alchemy.com/v2',\n  optimismGoerli: 'https://opt-goerli.g.alchemy.com/v2',\n  polygon: 'https://polygon-mainnet.g.alchemy.com/v2',\n  polygonMumbai: 'https://polygon-mumbai.g.alchemy.com/v2',\n  arbitrum: 'https://arb-mainnet.g.alchemy.com/v2',\n  arbitrumRinkeby: 'https://arb-rinkeby.g.alchemy.com/v2',\n  arbitrumGoerli: 'https://arb-goerli.g.alchemy.com/v2'\n};\nconst infuraRpcUrls = {\n  mainnet: 'https://mainnet.infura.io/v3',\n  ropsten: 'https://ropsten.infura.io/v3',\n  rinkeby: 'https://rinkeby.infura.io/v3',\n  goerli: 'https://goerli.infura.io/v3',\n  kovan: 'https://kovan.infura.io/v3',\n  sepolia: 'https://sepolia.infura.io/v3',\n  optimism: 'https://optimism-mainnet.infura.io/v3',\n  optimismKovan: 'https://optimism-kovan.infura.io/v3',\n  optimismGoerli: 'https://optimism-goerli.infura.io/v3',\n  polygon: 'https://polygon-mainnet.infura.io/v3',\n  polygonMumbai: 'https://polygon-mumbai.infura.io/v3',\n  arbitrum: 'https://arbitrum-mainnet.infura.io/v3',\n  arbitrumRinkeby: 'https://arbitrum-rinkeby.infura.io/v3',\n  arbitrumGoerli: 'https://arbitrum-goerli.infura.io/v3'\n};\nconst publicRpcUrls = {\n  mainnet: `${alchemyRpcUrls.mainnet}/${defaultAlchemyApiKey}`,\n  ropsten: `${alchemyRpcUrls.ropsten}/${defaultAlchemyApiKey}`,\n  rinkeby: `${alchemyRpcUrls.rinkeby}/${defaultAlchemyApiKey}`,\n  goerli: `${alchemyRpcUrls.goerli}/${defaultAlchemyApiKey}`,\n  kovan: `${alchemyRpcUrls.kovan}/${defaultAlchemyApiKey}`,\n  sepolia: 'https://rpc.sepolia.org',\n  optimism: 'https://mainnet.optimism.io',\n  optimismKovan: 'https://kovan.optimism.io',\n  optimismGoerli: 'https://goerli.optimism.io',\n  polygon: 'https://polygon-rpc.com',\n  polygonMumbai: 'https://matic-mumbai.chainstacklabs.com',\n  arbitrum: 'https://arb1.arbitrum.io/rpc',\n  arbitrumRinkeby: 'https://rinkeby.arbitrum.io/rpc',\n  arbitrumGoerli: 'https://goerli-rollup.arbitrum.io/rpc'\n};\n\nexport { alchemyRpcUrls as a, defaultAlchemyApiKey as b, defaultInfuraApiKey as d, infuraRpcUrls as i, publicRpcUrls as p };\n","import { a as alchemyRpcUrls, p as publicRpcUrls, i as infuraRpcUrls } from './rpcs-b4aa70b9.esm.js';\n\nconst etherscanBlockExplorers = {\n  mainnet: {\n    name: 'Etherscan',\n    url: 'https://etherscan.io'\n  },\n  ropsten: {\n    name: 'Etherscan',\n    url: 'https://ropsten.etherscan.io'\n  },\n  rinkeby: {\n    name: 'Etherscan',\n    url: 'https://rinkeby.etherscan.io'\n  },\n  goerli: {\n    name: 'Etherscan',\n    url: 'https://goerli.etherscan.io'\n  },\n  kovan: {\n    name: 'Etherscan',\n    url: 'https://kovan.etherscan.io'\n  },\n  sepolia: {\n    name: 'Etherscan',\n    url: 'https://sepolia.etherscan.io'\n  },\n  optimism: {\n    name: 'Etherscan',\n    url: 'https://optimistic.etherscan.io'\n  },\n  optimismKovan: {\n    name: 'Etherscan',\n    url: 'https://kovan-optimistic.etherscan.io'\n  },\n  optimismGoerli: {\n    name: 'Etherscan',\n    url: 'https://goerli-optimism.etherscan.io'\n  },\n  polygon: {\n    name: 'PolygonScan',\n    url: 'https://polygonscan.com'\n  },\n  polygonMumbai: {\n    name: 'PolygonScan',\n    url: 'https://mumbai.polygonscan.com'\n  },\n  arbitrum: {\n    name: 'Arbiscan',\n    url: 'https://arbiscan.io'\n  },\n  arbitrumRinkeby: {\n    name: 'Arbiscan',\n    url: 'https://testnet.arbiscan.io'\n  },\n  arbitrumGoerli: {\n    name: 'Arbiscan',\n    url: 'https://goerli.arbiscan.io'\n  }\n};\n\nconst chainId = {\n  mainnet: 1,\n  ropsten: 3,\n  rinkeby: 4,\n  goerli: 5,\n  kovan: 42,\n  sepolia: 11_155_111,\n  optimism: 10,\n  optimismKovan: 69,\n  optimismGoerli: 420,\n  polygon: 137,\n  polygonMumbai: 80_001,\n  arbitrum: 42_161,\n  arbitrumRinkeby: 421_611,\n  arbitrumGoerli: 421_613,\n  localhost: 1_337,\n  hardhat: 31_337,\n  foundry: 31_337\n};\nconst mainnet = {\n  id: chainId.mainnet,\n  name: 'Ethereum',\n  network: 'homestead',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.mainnet,\n    default: publicRpcUrls.mainnet,\n    infura: infuraRpcUrls.mainnet,\n    public: publicRpcUrls.mainnet\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.mainnet,\n    default: etherscanBlockExplorers.mainnet\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 14353601\n  }\n};\nconst ropsten = {\n  id: chainId.ropsten,\n  name: 'Ropsten',\n  network: 'ropsten',\n  nativeCurrency: {\n    name: 'Ropsten Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.ropsten,\n    default: publicRpcUrls.ropsten,\n    infura: infuraRpcUrls.ropsten,\n    public: publicRpcUrls.ropsten\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.ropsten,\n    default: etherscanBlockExplorers.ropsten\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 12063863\n  },\n  testnet: true\n};\nconst rinkeby = {\n  id: chainId.rinkeby,\n  name: 'Rinkeby',\n  network: 'rinkeby',\n  nativeCurrency: {\n    name: 'Rinkeby Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.rinkeby,\n    default: publicRpcUrls.rinkeby,\n    infura: infuraRpcUrls.rinkeby,\n    public: publicRpcUrls.rinkeby\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.rinkeby,\n    default: etherscanBlockExplorers.rinkeby\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 10299530\n  },\n  testnet: true\n};\nconst goerli = {\n  id: chainId.goerli,\n  name: 'Goerli',\n  network: 'goerli',\n  nativeCurrency: {\n    name: 'Goerli Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.goerli,\n    default: publicRpcUrls.goerli,\n    infura: infuraRpcUrls.goerli,\n    public: publicRpcUrls.goerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.goerli,\n    default: etherscanBlockExplorers.goerli\n  },\n  ens: {\n    address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 6507670\n  },\n  testnet: true\n};\nconst kovan = {\n  id: chainId.kovan,\n  name: 'Kovan',\n  network: 'kovan',\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.kovan,\n    default: publicRpcUrls.kovan,\n    infura: infuraRpcUrls.kovan,\n    public: publicRpcUrls.kovan\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.kovan,\n    default: etherscanBlockExplorers.kovan\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 30285908\n  },\n  testnet: true\n};\nconst sepolia = {\n  id: chainId.sepolia,\n  name: 'Sepolia',\n  network: 'sepolia',\n  nativeCurrency: {\n    name: 'Sepolia Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    default: publicRpcUrls.sepolia,\n    infura: infuraRpcUrls.sepolia,\n    public: publicRpcUrls.sepolia\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.sepolia,\n    default: etherscanBlockExplorers.sepolia\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 751532\n  },\n  testnet: true\n};\nconst optimism = {\n  id: chainId.optimism,\n  name: 'Optimism',\n  network: 'optimism',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimism,\n    default: publicRpcUrls.optimism,\n    infura: infuraRpcUrls.optimism,\n    public: publicRpcUrls.optimism\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimism,\n    default: etherscanBlockExplorers.optimism\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 4286263\n  }\n};\nconst optimismKovan = {\n  id: chainId.optimismKovan,\n  name: 'Optimism Kovan',\n  network: 'optimism-kovan',\n  nativeCurrency: {\n    name: 'Kovan Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimismKovan,\n    default: publicRpcUrls.optimismKovan,\n    infura: infuraRpcUrls.optimismKovan,\n    public: publicRpcUrls.optimismKovan\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimismKovan,\n    default: etherscanBlockExplorers.optimismKovan\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 1418387\n  },\n  testnet: true\n};\nconst optimismGoerli = {\n  id: chainId.optimismGoerli,\n  name: 'Optimism Goerli',\n  network: 'optimism-goerli',\n  nativeCurrency: {\n    name: 'Goerli Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.optimismGoerli,\n    default: publicRpcUrls.optimismGoerli,\n    infura: infuraRpcUrls.optimismGoerli,\n    public: publicRpcUrls.optimismGoerli\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.optimismGoerli,\n    default: etherscanBlockExplorers.optimismGoerli\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 49461\n  },\n  testnet: true\n};\nconst polygon = {\n  id: chainId.polygon,\n  name: 'Polygon',\n  network: 'matic',\n  nativeCurrency: {\n    name: 'MATIC',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygon,\n    default: publicRpcUrls.polygon,\n    infura: infuraRpcUrls.polygon,\n    public: publicRpcUrls.polygon\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygon,\n    default: etherscanBlockExplorers.polygon\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 25770160\n  }\n};\nconst polygonMumbai = {\n  id: chainId.polygonMumbai,\n  name: 'Polygon Mumbai',\n  network: 'maticmum',\n  nativeCurrency: {\n    name: 'MATIC',\n    symbol: 'MATIC',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.polygonMumbai,\n    default: publicRpcUrls.polygonMumbai,\n    infura: infuraRpcUrls.polygonMumbai,\n    public: publicRpcUrls.polygonMumbai\n  },\n  blockExplorers: {\n    etherscan: etherscanBlockExplorers.polygonMumbai,\n    default: etherscanBlockExplorers.polygonMumbai\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 25444704\n  },\n  testnet: true\n};\nconst arbitrum = {\n  id: chainId.arbitrum,\n  name: 'Arbitrum One',\n  network: 'arbitrum',\n  nativeCurrency: {\n    name: 'Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrum,\n    default: publicRpcUrls.arbitrum,\n    infura: infuraRpcUrls.arbitrum,\n    public: publicRpcUrls.arbitrum\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrum,\n    default: etherscanBlockExplorers.arbitrum\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 7654707\n  }\n};\nconst arbitrumRinkeby = {\n  id: chainId.arbitrumRinkeby,\n  name: 'Arbitrum Rinkeby',\n  network: 'arbitrum-rinkeby',\n  nativeCurrency: {\n    name: 'Arbitrum Rinkeby Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrumRinkeby,\n    default: publicRpcUrls.arbitrumRinkeby,\n    infura: infuraRpcUrls.arbitrumRinkeby,\n    public: publicRpcUrls.arbitrumRinkeby\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://rinkeby-explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrumRinkeby,\n    default: etherscanBlockExplorers.arbitrumRinkeby\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 10228837\n  },\n  testnet: true\n};\nconst arbitrumGoerli = {\n  id: chainId.arbitrumGoerli,\n  name: 'Arbitrum Goerli',\n  network: 'arbitrum-goerli',\n  nativeCurrency: {\n    name: 'Arbitrum Goerli Ether',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: {\n    alchemy: alchemyRpcUrls.arbitrumGoerli,\n    default: publicRpcUrls.arbitrumGoerli,\n    infura: infuraRpcUrls.arbitrumGoerli,\n    public: publicRpcUrls.arbitrumGoerli\n  },\n  blockExplorers: {\n    arbitrum: {\n      name: 'Arbitrum Explorer',\n      url: 'https://goerli-rollup-explorer.arbitrum.io'\n    },\n    etherscan: etherscanBlockExplorers.arbitrumGoerli,\n    default: etherscanBlockExplorers.arbitrumGoerli\n  },\n  multicall: {\n    address: '0xca11bde05977b3631167028862be2a173976ca11',\n    blockCreated: 88114\n  },\n  testnet: true\n};\nconst localhost = {\n  id: chainId.localhost,\n  name: 'Localhost',\n  network: 'localhost',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\nconst hardhat = {\n  id: chainId.hardhat,\n  name: 'Hardhat',\n  network: 'hardhat',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\nconst foundry = {\n  id: chainId.foundry,\n  name: 'Foundry',\n  network: 'foundry',\n  rpcUrls: {\n    default: 'http://127.0.0.1:8545'\n  }\n};\n/**\n * Common chains for convenience\n * Should not contain all possible chains\n */\n\nconst chain = {\n  mainnet,\n  ropsten,\n  rinkeby,\n  goerli,\n  kovan,\n  sepolia,\n  optimism,\n  optimismGoerli,\n  optimismKovan,\n  polygon,\n  polygonMumbai,\n  arbitrum,\n  arbitrumGoerli,\n  arbitrumRinkeby,\n  localhost,\n  hardhat,\n  foundry\n};\nconst allChains = [mainnet, ropsten, rinkeby, goerli, kovan, sepolia, optimism, optimismKovan, optimismGoerli, polygon, polygonMumbai, arbitrum, arbitrumGoerli, arbitrumRinkeby, localhost, hardhat, foundry];\nconst defaultChains = [mainnet, ropsten, rinkeby, goerli, kovan];\nconst defaultL2Chains = [arbitrum, arbitrumRinkeby, arbitrumGoerli, optimism, optimismKovan, optimismGoerli];\n\nexport { allChains as a, chainId as b, chain as c, defaultChains as d, defaultL2Chains as e, etherscanBlockExplorers as f, arbitrum as g, arbitrumGoerli as h, arbitrumRinkeby as i, foundry as j, goerli as k, hardhat as l, mainnet as m, kovan as n, localhost as o, optimism as p, optimismKovan as q, optimismGoerli as r, sepolia as s, polygon as t, polygonMumbai as u, rinkeby as v, ropsten as w };\n","import { subscribeWithSelector, persist } from 'zustand/middleware';\nimport create from 'zustand/vanilla';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport EventEmitter from 'eventemitter3';\nimport { d as defaultChains } from './chains-1ebc77f8.esm.js';\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\n\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\n\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  _classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor(\n  /** Number error code */\n  code,\n  /** Human-readable string */\n  message,\n  /** Low-level error */\n  internal,\n  /** Other useful information about error */\n  data) {\n    if (!Number.isInteger(code)) throw new Error('\"code\" must be an integer.');\n    if (!message || typeof message !== 'string') throw new Error('\"message\" must be a nonempty string.');\n    super(message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"data\", void 0);\n\n    _defineProperty(this, \"internal\", void 0);\n\n    this.code = code;\n    this.data = data;\n    this.internal = internal;\n  }\n\n}\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\n\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor(\n  /**\n   * Number error code\n   * @see https://eips.ethereum.org/EIPS/eip-1193#error-standards\n   */\n  code,\n  /** Human-readable string */\n  message,\n  /** Low-level error */\n  internal,\n  /** Other useful information about error */\n  data) {\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    super(code, message, internal, data);\n  }\n\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'AddChainError');\n\n    _defineProperty(this, \"message\", 'Error adding chain');\n  }\n\n}\nclass ChainDoesNotSupportMulticallError extends Error {\n  constructor(_ref) {\n    let {\n      blockNumber,\n      chain\n    } = _ref;\n    super(`Chain \"${chain.name}\" does not support multicall${blockNumber ? ` on block ${blockNumber}` : ''}.`);\n\n    _defineProperty(this, \"name\", 'ChainDoesNotSupportMulticall');\n  }\n\n}\nclass ChainMismatchError extends Error {\n  constructor(_ref2) {\n    let {\n      activeChain,\n      targetChain\n    } = _ref2;\n    super(`Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`);\n\n    _defineProperty(this, \"name\", 'ChainMismatchError');\n  }\n\n}\nclass ChainNotConfiguredError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ChainNotConfigured');\n\n    _defineProperty(this, \"message\", 'Chain not configured');\n  }\n\n}\nclass ConnectorAlreadyConnectedError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ConnectorAlreadyConnectedError');\n\n    _defineProperty(this, \"message\", 'Connector already connected');\n  }\n\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ConnectorNotFoundError');\n\n    _defineProperty(this, \"message\", 'Connector not found');\n  }\n\n}\nclass ContractMethodDoesNotExistError extends Error {\n  constructor(_ref3) {\n    var _chain$blockExplorers;\n\n    let {\n      address,\n      chainId,\n      functionName\n    } = _ref3;\n    const {\n      chains,\n      network\n    } = getProvider();\n    const chain = chains === null || chains === void 0 ? void 0 : chains.find(_ref4 => {\n      let {\n        id\n      } = _ref4;\n      return id === (chainId || network.chainId);\n    });\n    const blockExplorer = chain === null || chain === void 0 ? void 0 : (_chain$blockExplorers = chain.blockExplorers) === null || _chain$blockExplorers === void 0 ? void 0 : _chain$blockExplorers.default;\n    super([`Function \"${functionName}\" on contract \"${address}\" does not exist.`, ...(blockExplorer ? ['', `${blockExplorer === null || blockExplorer === void 0 ? void 0 : blockExplorer.name}: ${blockExplorer === null || blockExplorer === void 0 ? void 0 : blockExplorer.url}/address/${address}#readContract`] : [])].join('\\n'));\n\n    _defineProperty(this, \"name\", 'ContractMethodDoesNotExistError');\n  }\n\n}\nclass ContractMethodNoResultError extends Error {\n  constructor(_ref5) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName\n    } = _ref5;\n    super(['Contract read returned an empty response. This could be due to any of the following:', `- The contract does not have the function \"${functionName}\",`, '- The parameters passed to the contract function may be invalid, or', '- The address is not a contract.', '', `Config:`, JSON.stringify({\n      address,\n      abi: '...',\n      functionName,\n      chainId,\n      args\n    }, null, 2)].join('\\n'));\n\n    _defineProperty(this, \"name\", 'ContractMethodNoResultError');\n  }\n\n}\nclass ContractMethodRevertedError extends Error {\n  constructor(_ref6) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName,\n      errorMessage\n    } = _ref6;\n    super(['Contract method reverted with an error.', '', `Config:`, JSON.stringify({\n      address,\n      abi: '...',\n      functionName,\n      chainId,\n      args\n    }, null, 2), '', `Details: ${errorMessage}`].join('\\n'));\n\n    _defineProperty(this, \"name\", 'ContractMethodRevertedError');\n  }\n\n}\nclass ContractResultDecodeError extends Error {\n  constructor(_ref7) {\n    let {\n      address,\n      args,\n      chainId,\n      functionName,\n      errorMessage\n    } = _ref7;\n    super(['Failed to decode contract function result.', '', `Config:`, JSON.stringify({\n      address,\n      abi: '...',\n      functionName,\n      chainId,\n      args\n    }, null, 2), '', `Details: ${errorMessage}`].join('\\n'));\n\n    _defineProperty(this, \"name\", 'ContractResultDecodeError');\n  }\n\n}\nclass ProviderChainsNotFound extends Error {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"name\", 'ProviderChainsNotFound');\n\n    _defineProperty(this, \"message\", ['No chains were found on the wagmi provider. Some functions that require a chain may not work.', '', 'It is recommended to add a list of chains to the provider in `createClient`.', '', 'Example:', '', '```', \"import { getDefaultProvider } from 'ethers'\", \"import { chain, createClient } from 'wagmi'\", '', 'createClient({', '  provider: Object.assign(getDefaultProvider(), { chains: [chain.mainnet] })', '})', '```'].join('\\n'));\n  }\n\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(error) {\n    super(-32002, 'Resource unavailable', error);\n\n    _defineProperty(this, \"name\", 'ResourceUnavailable');\n  }\n\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(error) {\n    super(4902, 'Error switching chain', error);\n\n    _defineProperty(this, \"name\", 'SwitchChainError');\n  }\n\n}\nclass SwitchChainNotSupportedError extends Error {\n  constructor(_ref8) {\n    let {\n      connector\n    } = _ref8;\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n\n    _defineProperty(this, \"name\", 'SwitchChainNotSupportedError');\n  }\n\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(error) {\n    super(4001, 'User rejected request', error);\n\n    _defineProperty(this, \"name\", 'UserRejectedRequestError');\n  }\n\n}\n\nfunction getInjectedName(ethereum) {\n  var _ethereum$providers;\n\n  if (!ethereum) return 'Injected';\n\n  const getName = provider => {\n    if (provider.isAvalanche) return 'Core Wallet';\n    if (provider.isBitKeep) return 'BitKeep';\n    if (provider.isBraveWallet) return 'Brave Wallet';\n    if (provider.isCoinbaseWallet) return 'Coinbase Wallet';\n    if (provider.isExodus) return 'Exodus';\n    if (provider.isFrame) return 'Frame';\n    if (provider.isMathWallet) return 'MathWallet';\n    if (provider.isOpera) return 'Opera';\n    if (provider.isPortal) return 'Ripio Portal';\n    if (provider.isTally) return 'Tally';\n    if (provider.isTokenPocket) return 'TokenPocket';\n    if (provider.isTokenary) return 'Tokenary';\n    if (provider.isTrust) return 'Trust Wallet';\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) return '1inch Wallet';\n    if (provider.isMetaMask) return 'MetaMask';\n  }; // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n\n\n  if ((_ethereum$providers = ethereum.providers) !== null && _ethereum$providers !== void 0 && _ethereum$providers.length) {\n    // Deduplicate names using Set\n    // Coinbase Wallet puts multiple providers in `ethereum.providers`\n    const nameSet = new Set();\n    let unknownCount = 1;\n\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n\n      nameSet.add(name);\n    }\n\n    const names = [...nameSet];\n    if (names.length) return names;\n    return names[0] ?? 'Injected';\n  }\n\n  return getName(ethereum) ?? 'Injected';\n}\n\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === 'string') return Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);\n  if (typeof chainId === 'bigint') return Number(chainId);\n  return chainId;\n}\n\nclass Connector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"chains\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"ready\", void 0);\n\n    this.chains = chains;\n    this.options = options;\n  }\n\n  getBlockExplorerUrls(chain) {\n    const {\n      default: blockExplorer,\n      ...blockExplorers\n    } = chain.blockExplorers ?? {};\n    if (blockExplorer) return [blockExplorer.url, ...Object.values(blockExplorers).map(x => x.url)];\n    return [];\n  }\n\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.id === chainId);\n  }\n\n}\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _switchingChains = /*#__PURE__*/new WeakMap();\n\nclass InjectedConnector extends Connector {\n  constructor() {\n    let {\n      chains,\n      options: options_\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"ready\", typeof window != 'undefined' && !!window.ethereum);\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _switchingChains, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"shimDisconnectKey\", 'injected.shimDisconnect');\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      var _this$options, _this$options2, _getClient$storage;\n\n      // We need this as MetaMask can emit the \"disconnect\" event\n      // upon switching chains. This workaround ensures that the\n      // user currently isn't in the process of switching chains.\n      if ((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.shimChainChangedDisconnect && _classPrivateFieldGet(this, _switchingChains)) {\n        _classPrivateFieldSet(this, _switchingChains, false);\n\n        return;\n      }\n\n      this.emit('disconnect'); // Remove shim signalling wallet is disconnected\n\n      if ((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.shimDisconnect) (_getClient$storage = getClient().storage) === null || _getClient$storage === void 0 ? void 0 : _getClient$storage.removeItem(this.shimDisconnectKey);\n    });\n\n    let name = 'Injected';\n    const overrideName = options.name;\n    if (typeof overrideName === 'string') name = overrideName;else if (typeof window !== 'undefined') {\n      const detectedName = getInjectedName(window.ethereum);\n      if (overrideName) name = overrideName(detectedName);else name = typeof detectedName === 'string' ? detectedName : detectedName[0];\n    }\n    this.id = 'injected';\n    this.name = name;\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _this$options3, _getClient$storage2;\n\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n\n      if (provider.on) {\n        provider.on('accountsChanged', this.onAccountsChanged);\n        provider.on('chainChanged', this.onChainChanged);\n        provider.on('disconnect', this.onDisconnect);\n      }\n\n      this.emit('message', {\n        type: 'connecting'\n      });\n      const account = await this.getAccount(); // Switch to chain if provided\n\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      } // Add shim to storage signalling wallet is connected\n\n\n      if ((_this$options3 = this.options) !== null && _this$options3 !== void 0 && _this$options3.shimDisconnect) (_getClient$storage2 = getClient().storage) === null || _getClient$storage2 === void 0 ? void 0 : _getClient$storage2.setItem(this.shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    var _this$options4, _getClient$storage3;\n\n    const provider = await this.getProvider();\n    if (!(provider !== null && provider !== void 0 && provider.removeListener)) return;\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect); // Remove shim signalling wallet is disconnected\n\n    if ((_this$options4 = this.options) !== null && _this$options4 !== void 0 && _this$options4.shimDisconnect) (_getClient$storage3 = getClient().storage) === null || _getClient$storage3 === void 0 ? void 0 : _getClient$storage3.removeItem(this.shimDisconnectKey);\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const accounts = await provider.request({\n      method: 'eth_requestAccounts'\n    }); // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return provider.request({\n      method: 'eth_chainId'\n    }).then(normalizeChainId);\n  }\n\n  async getProvider() {\n    if (typeof window !== 'undefined' && !!window.ethereum) _classPrivateFieldSet(this, _provider, window.ethereum);\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      var _this$options5, _getClient$storage4;\n\n      if ((_this$options5 = this.options) !== null && _this$options5 !== void 0 && _this$options5.shimDisconnect && // If shim does not exist in storage, wallet is disconnected\n      !((_getClient$storage4 = getClient().storage) !== null && _getClient$storage4 !== void 0 && _getClient$storage4.getItem(this.shimDisconnectKey))) return false;\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      const accounts = await provider.request({\n        method: 'eth_accounts'\n      });\n      const account = accounts[0];\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    var _this$options6;\n\n    if ((_this$options6 = this.options) !== null && _this$options6 !== void 0 && _this$options6.shimChainChangedDisconnect) _classPrivateFieldSet(this, _switchingChains, true);\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    const id = hexValue(chainId);\n\n    try {\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        rpcUrls: {\n          default: ''\n        }\n      };\n    } catch (error) {\n      var _data, _data$originalError;\n\n      const chain = this.chains.find(x => x.id === chainId);\n      if (!chain) throw new ChainNotConfiguredError(); // Indicates chain is not added to provider\n\n      if (error.code === 4902 || // Unwrapping for MetaMask Mobile\n      // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n      (error === null || error === void 0 ? void 0 : (_data = error.data) === null || _data === void 0 ? void 0 : (_data$originalError = _data.originalError) === null || _data$originalError === void 0 ? void 0 : _data$originalError.code) === 4902) {\n        try {\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [chain.rpcUrls.public ?? chain.rpcUrls.default],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (this.isUserRejectedRequestError(addError)) throw new UserRejectedRequestError(error);\n          throw new AddChainError();\n        }\n      }\n\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n\n  async watchAsset(_ref) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref;\n    const provider = await this.getProvider();\n    if (!provider) throw new ConnectorNotFoundError();\n    return provider.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n\n}\n\nconst noopStorage = {\n  getItem: _key => '',\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\nfunction createStorage(_ref) {\n  let {\n    storage,\n    key: prefix = 'wagmi'\n  } = _ref;\n  return { ...storage,\n    getItem: function (key) {\n      let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const value = storage.getItem(`${prefix}.${key}`);\n\n      try {\n        return value ? JSON.parse(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, JSON.stringify(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\nconst storeKey = 'store';\n\nvar _isAutoConnecting = /*#__PURE__*/new WeakMap();\n\nvar _lastUsedConnector = /*#__PURE__*/new WeakMap();\n\nvar _addEffects = /*#__PURE__*/new WeakSet();\n\nclass Client {\n  constructor(_ref) {\n    let {\n      autoConnect = false,\n      connectors = [new InjectedConnector()],\n      provider: _provider,\n      storage = createStorage({\n        storage: typeof window !== 'undefined' ? window.localStorage : noopStorage\n      }),\n      logger = {\n        warn: console.warn\n      },\n      webSocketProvider: _webSocketProvider\n    } = _ref;\n\n    _classPrivateMethodInitSpec(this, _addEffects);\n\n    _defineProperty(this, \"config\", void 0);\n\n    _defineProperty(this, \"providers\", new Map());\n\n    _defineProperty(this, \"storage\", void 0);\n\n    _defineProperty(this, \"store\", void 0);\n\n    _defineProperty(this, \"webSocketProviders\", new Map());\n\n    _classPrivateFieldInitSpec(this, _isAutoConnecting, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _lastUsedConnector, {\n      writable: true,\n      value: void 0\n    });\n\n    this.config = {\n      autoConnect,\n      connectors,\n      logger,\n      provider: _provider,\n      storage,\n      webSocketProvider: _webSocketProvider\n    }; // Check status for autoConnect flag\n\n    let status = 'disconnected';\n\n    let _chainId;\n\n    if (autoConnect) {\n      try {\n        var _JSON$parse, _JSON$parse$state, _data$chain;\n\n        const rawState = storage.getItem(storeKey, '');\n        const data = (_JSON$parse = JSON.parse(rawState || '{}')) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$state = _JSON$parse.state) === null || _JSON$parse$state === void 0 ? void 0 : _JSON$parse$state.data; // If account exists in localStorage, set status to reconnecting\n\n        status = data !== null && data !== void 0 && data.account ? 'reconnecting' : 'connecting';\n        _chainId = data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id; // eslint-disable-next-line no-empty\n      } catch (_error) {}\n    } // Create store\n\n\n    this.store = create(subscribeWithSelector(persist(() => ({\n      connectors: typeof connectors === 'function' ? connectors() : connectors,\n      provider: this.getProvider({\n        chainId: _chainId\n      }),\n      status,\n      webSocketProvider: this.getWebSocketProvider({\n        chainId: _chainId\n      })\n    }), {\n      name: storeKey,\n      getStorage: () => storage,\n      partialize: state => {\n        var _state$data, _state$data2;\n\n        return { ...(autoConnect && {\n            data: {\n              account: state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.account,\n              chain: state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.chain\n            }\n          }),\n          chains: state === null || state === void 0 ? void 0 : state.chains\n        };\n      },\n      version: 1\n    })));\n    this.storage = storage;\n\n    _classPrivateFieldSet(this, _lastUsedConnector, storage === null || storage === void 0 ? void 0 : storage.getItem('wallet'));\n\n    _classPrivateMethodGet(this, _addEffects, _addEffects2).call(this);\n\n    if (autoConnect && typeof window !== 'undefined') setTimeout(async () => await this.autoConnect(), 0);\n  }\n\n  get chains() {\n    return this.store.getState().chains;\n  }\n\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n\n  get connector() {\n    return this.store.getState().connector;\n  }\n\n  get data() {\n    return this.store.getState().data;\n  }\n\n  get error() {\n    return this.store.getState().error;\n  }\n\n  get lastUsedChainId() {\n    var _this$data, _this$data$chain;\n\n    return (_this$data = this.data) === null || _this$data === void 0 ? void 0 : (_this$data$chain = _this$data.chain) === null || _this$data$chain === void 0 ? void 0 : _this$data$chain.id;\n  }\n\n  get provider() {\n    return this.store.getState().provider;\n  }\n\n  get status() {\n    return this.store.getState().status;\n  }\n\n  get subscribe() {\n    return this.store.subscribe;\n  }\n\n  get webSocketProvider() {\n    return this.store.getState().webSocketProvider;\n  }\n\n  setState(updater) {\n    const newState = typeof updater === 'function' ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n\n  clearState() {\n    this.setState(x => ({ ...x,\n      connector: undefined,\n      data: undefined,\n      error: undefined,\n      status: 'disconnected'\n    }));\n  }\n\n  async destroy() {\n    var _this$connector$disco, _this$connector;\n\n    if (this.connector) await ((_this$connector$disco = (_this$connector = this.connector).disconnect) === null || _this$connector$disco === void 0 ? void 0 : _this$connector$disco.call(_this$connector));\n\n    _classPrivateFieldSet(this, _isAutoConnecting, false);\n\n    this.clearState();\n    this.store.destroy();\n  }\n\n  async autoConnect() {\n    if (_classPrivateFieldGet(this, _isAutoConnecting)) return;\n\n    _classPrivateFieldSet(this, _isAutoConnecting, true);\n\n    this.setState(x => {\n      var _x$data;\n\n      return { ...x,\n        status: (_x$data = x.data) !== null && _x$data !== void 0 && _x$data.account ? 'reconnecting' : 'connecting'\n      };\n    }); // Try last used connector first\n\n    const sorted = _classPrivateFieldGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === _classPrivateFieldGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({ ...x,\n        connector,\n        chains: connector === null || connector === void 0 ? void 0 : connector.chains,\n        data,\n        status: 'connected'\n      }));\n      connected = true;\n      break;\n    } // If connecting didn't succeed, set to disconnected\n\n\n    if (!connected) this.setState(x => ({ ...x,\n      data: undefined,\n      status: 'disconnected'\n    }));\n\n    _classPrivateFieldSet(this, _isAutoConnecting, false);\n\n    return this.data;\n  }\n\n  getProvider() {\n    let {\n      bust,\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let provider_ = this.providers.get(chainId ?? -1);\n    if (provider_ && !bust) return provider_;\n    const {\n      provider\n    } = this.config;\n    provider_ = typeof provider === 'function' ? provider({\n      chainId\n    }) : provider;\n    this.providers.set(chainId ?? -1, provider_);\n    return provider_;\n  }\n\n  getWebSocketProvider() {\n    let {\n      bust,\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let webSocketProvider_ = this.webSocketProviders.get(chainId ?? -1);\n    if (webSocketProvider_ && !bust) return webSocketProvider_;\n    const {\n      webSocketProvider\n    } = this.config;\n    webSocketProvider_ = typeof webSocketProvider === 'function' ? webSocketProvider({\n      chainId\n    }) : webSocketProvider;\n    if (webSocketProvider_) this.webSocketProviders.set(chainId ?? -1, webSocketProvider_);\n    return webSocketProvider_;\n  }\n\n  setLastUsedConnector() {\n    var _this$storage;\n\n    let lastUsedConnector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    (_this$storage = this.storage) === null || _this$storage === void 0 ? void 0 : _this$storage.setItem('wallet', lastUsedConnector);\n  }\n\n}\n\nfunction _addEffects2() {\n  const onChange = data => {\n    this.setState(x => ({ ...x,\n      data: { ...x.data,\n        ...data\n      }\n    }));\n  };\n\n  const onDisconnect = () => {\n    this.clearState();\n  };\n\n  const onError = error => {\n    this.setState(x => ({ ...x,\n      error\n    }));\n  };\n\n  this.store.subscribe(_ref2 => {\n    let {\n      connector\n    } = _ref2;\n    return connector;\n  }, (connector, prevConnector) => {\n    var _prevConnector$off, _prevConnector$off2, _prevConnector$off3, _connector$on, _connector$on2, _connector$on3;\n\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off = prevConnector.off) === null || _prevConnector$off === void 0 ? void 0 : _prevConnector$off.call(prevConnector, 'change', onChange);\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off2 = prevConnector.off) === null || _prevConnector$off2 === void 0 ? void 0 : _prevConnector$off2.call(prevConnector, 'disconnect', onDisconnect);\n    prevConnector === null || prevConnector === void 0 ? void 0 : (_prevConnector$off3 = prevConnector.off) === null || _prevConnector$off3 === void 0 ? void 0 : _prevConnector$off3.call(prevConnector, 'error', onError);\n    if (!connector) return;\n    (_connector$on = connector.on) === null || _connector$on === void 0 ? void 0 : _connector$on.call(connector, 'change', onChange);\n    (_connector$on2 = connector.on) === null || _connector$on2 === void 0 ? void 0 : _connector$on2.call(connector, 'disconnect', onDisconnect);\n    (_connector$on3 = connector.on) === null || _connector$on3 === void 0 ? void 0 : _connector$on3.call(connector, 'error', onError);\n  });\n  const {\n    provider,\n    webSocketProvider\n  } = this.config;\n  const subscribeProvider = typeof provider === 'function';\n  const subscribeWebSocketProvider = typeof webSocketProvider === 'function';\n  if (subscribeProvider || subscribeWebSocketProvider) this.store.subscribe(_ref3 => {\n    var _data$chain2;\n\n    let {\n      data\n    } = _ref3;\n    return data === null || data === void 0 ? void 0 : (_data$chain2 = data.chain) === null || _data$chain2 === void 0 ? void 0 : _data$chain2.id;\n  }, chainId => {\n    this.setState(x => ({ ...x,\n      provider: this.getProvider({\n        bust: true,\n        chainId\n      }),\n      webSocketProvider: this.getWebSocketProvider({\n        bust: true,\n        chainId\n      })\n    }));\n  });\n}\n\nlet client;\nfunction createClient(config) {\n  const client_ = new Client(config);\n  client = client_;\n  return client_;\n}\nfunction getClient() {\n  if (!client) {\n    throw new Error('No wagmi client found. Ensure you have set up a client: https://wagmi.sh/docs/client');\n  }\n\n  return client;\n}\n\nfunction getProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  if (chainId) return client.getProvider({\n    chainId\n  }) || client.provider;\n  return client.provider;\n}\n\nexport { AddChainError as A, ChainMismatchError as C, InjectedConnector as I, ProviderChainsNotFound as P, ResourceUnavailableError as R, SwitchChainNotSupportedError as S, UserRejectedRequestError as U, _classPrivateMethodInitSpec as _, ConnectorAlreadyConnectedError as a, ContractResultDecodeError as b, ConnectorNotFoundError as c, ContractMethodDoesNotExistError as d, getProvider as e, ChainDoesNotSupportMulticallError as f, getClient as g, ContractMethodRevertedError as h, ContractMethodNoResultError as i, createClient as j, Client as k, Connector as l, ChainNotConfiguredError as m, normalizeChainId as n, ProviderRpcError as o, RpcError as p, SwitchChainError as q, createStorage as r, noopStorage as s, _defineProperty as t, _classPrivateMethodGet as u, _classPrivateFieldInitSpec as v, _classPrivateFieldSet as w, _classPrivateFieldGet as x };\n","import { C as ChainMismatchError, g as getClient, a as ConnectorAlreadyConnectedError, b as ContractResultDecodeError, c as ConnectorNotFoundError, d as ContractMethodDoesNotExistError, e as getProvider, P as ProviderChainsNotFound, f as ChainDoesNotSupportMulticallError, h as ContractMethodRevertedError, i as ContractMethodNoResultError, U as UserRejectedRequestError, n as normalizeChainId, S as SwitchChainNotSupportedError } from './getProvider-2ff978f9.esm.js';\nexport { A as AddChainError, f as ChainDoesNotSupportMulticallError, C as ChainMismatchError, m as ChainNotConfiguredError, k as Client, l as Connector, a as ConnectorAlreadyConnectedError, c as ConnectorNotFoundError, d as ContractMethodDoesNotExistError, i as ContractMethodNoResultError, h as ContractMethodRevertedError, b as ContractResultDecodeError, I as InjectedConnector, P as ProviderChainsNotFound, o as ProviderRpcError, R as ResourceUnavailableError, p as RpcError, q as SwitchChainError, S as SwitchChainNotSupportedError, U as UserRejectedRequestError, j as createClient, r as createStorage, e as getProvider, s as noopStorage, n as normalizeChainId } from './getProvider-2ff978f9.esm.js';\nimport { Contract, logger } from 'ethers/lib/ethers';\nimport { FunctionFragment, isAddress, FormatTypes, parseBytes32String, formatUnits, getAddress, Logger } from 'ethers/lib/utils';\nimport { providers, BigNumber, Contract as Contract$1 } from 'ethers';\nimport { m as mainnet } from './chains-1ebc77f8.esm.js';\nexport { a as allChains, c as chain, b as chainId, d as defaultChains, e as defaultL2Chains, f as etherscanBlockExplorers } from './chains-1ebc77f8.esm.js';\nimport shallow from 'zustand/shallow';\nimport { d as debounce } from './debounce-0862bf88.esm.js';\nexport { a as alchemyRpcUrls, i as infuraRpcUrls, p as publicRpcUrls } from './rpcs-b4aa70b9.esm.js';\nimport 'zustand/middleware';\nimport 'zustand/vanilla';\nimport 'eventemitter3';\n\nfunction configureChains(defaultChains, providers) {\n  let {\n    minQuorum = 1,\n    pollingInterval = 4_000,\n    targetQuorum = 1,\n    stallTimeout\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!defaultChains.length) throw new Error('must have at least one chain');\n  if (targetQuorum < minQuorum) throw new Error('quorum cannot be lower than minQuorum');\n  let chains = [];\n  const providers_ = {};\n  const webSocketProviders_ = {};\n\n  for (const chain of defaultChains) {\n    let configExists = false;\n\n    for (const provider of providers) {\n      const apiConfig = provider(chain); // If no API configuration was found (ie. no RPC URL) for\n      // this provider, then we skip and check the next one.\n\n      if (!apiConfig) continue;\n      configExists = true;\n\n      if (!chains.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === chain.id;\n      })) {\n        chains = [...chains, apiConfig.chain];\n      }\n\n      providers_[chain.id] = [...(providers_[chain.id] || []), apiConfig.provider];\n\n      if (apiConfig.webSocketProvider) {\n        webSocketProviders_[chain.id] = [...(webSocketProviders_[chain.id] || []), apiConfig.webSocketProvider];\n      }\n    } // If no API configuration was found across the providers\n    // then we throw an error to the consumer.\n\n\n    if (!configExists) {\n      throw new Error([`Could not find valid provider configuration for chain \"${chain.name}\".\\n`, \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", 'Read more: https://wagmi.sh/docs/providers/jsonRpc'].join('\\n'));\n    }\n  }\n\n  return {\n    chains,\n    provider: _ref2 => {\n      let {\n        chainId\n      } = _ref2;\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainProviders = providers_[activeChain.id];\n      if (!chainProviders || !chainProviders[0]) throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      let provider;\n\n      if (chainProviders.length === 1) {\n        provider = chainProviders[0]();\n      } else {\n        provider = fallbackProvider(targetQuorum, minQuorum, chainProviders, {\n          stallTimeout\n        });\n      } // Formatter workaround as Celo does not provide `gasLimit` or `difficulty` on eth_getBlockByNumber.\n\n\n      if (activeChain.id === 42220) {\n        provider.formatter.formats.block = { ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      }\n\n      return Object.assign(provider, {\n        chains,\n        pollingInterval\n      });\n    },\n    webSocketProvider: _ref3 => {\n      var _chainWebSocketProvid;\n\n      let {\n        chainId\n      } = _ref3;\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainWebSocketProviders = webSocketProviders_[activeChain.id];\n      if (!chainWebSocketProviders) return undefined;\n      const provider = (_chainWebSocketProvid = chainWebSocketProviders[0]) === null || _chainWebSocketProvid === void 0 ? void 0 : _chainWebSocketProvid.call(chainWebSocketProviders); // Formatter workaround as Celo does not provide `gasLimit` or `difficulty` on eth_getBlockByNumber.\n\n      if (provider && activeChain.id === 42220) {\n        provider.formatter.formats.block = { ...provider.formatter.formats.block,\n          difficulty: () => 0,\n          gasLimit: () => 0\n        };\n      } // WebSockets do not work with `fallbackProvider`\n      // Default to first available\n\n\n      return Object.assign(provider || {}, {\n        chains\n      });\n    }\n  };\n}\n\nfunction fallbackProvider(targetQuorum, minQuorum, providers_, _ref4) {\n  let {\n    stallTimeout\n  } = _ref4;\n\n  try {\n    return new providers.FallbackProvider(providers_.map((chainProvider, index) => {\n      const provider = chainProvider();\n      return {\n        provider,\n        priority: provider.priority ?? index,\n        stallTimeout: provider.stallTimeout ?? stallTimeout,\n        weight: provider.weight\n      };\n    }), targetQuorum);\n  } catch (error) {\n    var _error$message;\n\n    if (error !== null && error !== void 0 && (_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('quorum will always fail; larger than total weight')) {\n      if (targetQuorum === minQuorum) throw error;\n      return fallbackProvider(targetQuorum - 1, minQuorum, providers_, {\n        stallTimeout\n      });\n    }\n\n    throw error;\n  }\n}\n\nfunction assertActiveChain(_ref) {\n  let {\n    chainId\n  } = _ref;\n  const {\n    chain: activeChain,\n    chains\n  } = getNetwork();\n  const activeChainId = activeChain === null || activeChain === void 0 ? void 0 : activeChain.id;\n\n  if (chainId !== activeChainId) {\n    var _chains$find, _chains$find2;\n\n    throw new ChainMismatchError({\n      activeChain: ((_chains$find = chains.find(x => x.id === activeChainId)) === null || _chains$find === void 0 ? void 0 : _chains$find.name) ?? `Chain ${activeChainId}`,\n      targetChain: ((_chains$find2 = chains.find(x => x.id === chainId)) === null || _chains$find2 === void 0 ? void 0 : _chains$find2.name) ?? `Chain ${chainId}`\n    });\n  }\n}\n\n/** Forked from https://github.com/epoberezkin/fast-deep-equal */\nfunction deepEqual(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) return false;\n    let length;\n    let i;\n\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false;\n\n      return true;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n\n\n  return a !== a && b !== b;\n}\n\n/**\n * Get normalized function name from contract\n *\n * @param contract — Contract\n * @param functionName — Function name\n * @param args — Function arguments (used to disambiguate overloaded functions)\n *\n * @returns Normalized function name\n */\n\nfunction normalizeFunctionName(_ref) {\n  let {\n    contract,\n    functionName,\n    args = []\n  } = _ref;\n  // If `functionName` exists in contract, return it.\n  if (functionName in contract.functions) return functionName; // Otherwise, check if `functionName` is an overloaded function based on `args` shape.\n\n  const argsLength = (args === null || args === void 0 ? void 0 : args.length) ?? 0;\n  const overloadFunctions = Object.keys(contract.functions).filter(x => x.startsWith(`${functionName}(`)).map(x => ({\n    name: x,\n    fragment: FunctionFragment.fromString(x)\n  })).filter(x => argsLength === x.fragment.inputs.length);\n\n  for (const overloadFunction of overloadFunctions) {\n    const matched = args.every((arg, index) => {\n      const abiParameter = overloadFunction.fragment.inputs[index];\n      return isArgOfType(arg, abiParameter);\n    });\n    if (matched) return overloadFunction.name;\n  } // Wasn't able to find overload, just return function name.\n\n\n  return functionName;\n}\nfunction isArgOfType(arg, abiParameter) {\n  const argType = typeof arg;\n  const abiParameterType = abiParameter.type;\n\n  switch (abiParameterType) {\n    case 'address':\n      return isAddress(arg);\n\n    case 'bool':\n      return argType === 'boolean';\n\n    case 'function':\n      return argType === 'string';\n\n    case 'string':\n      return argType === 'string';\n\n    default:\n      {\n        if (abiParameterType === 'tuple' && 'components' in abiParameter) return Object.values(abiParameter.components).every((component, index) => {\n          return isArgOfType(Object.values(arg)[index], component);\n        }); // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n        // https://regexr.com/6v8hp\n\n        if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType)) return argType === 'number' || argType === 'bigint' || BigNumber.isBigNumber(arg); // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n        // https://regexr.com/6va55\n\n        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType)) return argType === 'string' || arg instanceof Uint8Array; // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n        // https://regexr.com/6va6i\n\n        if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n          return Array.isArray(arg) && arg.every(x => isArgOfType(x, { ...abiParameter,\n            // Pop off `[]` or `[M]` from end of type\n            type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, '')\n          }));\n        }\n\n        return false;\n      }\n  }\n}\n\nfunction logWarn(message) {\n  var _getClient, _getClient$config$log, _getClient$config$log2;\n\n  (_getClient = getClient()) === null || _getClient === void 0 ? void 0 : (_getClient$config$log = _getClient.config.logger) === null || _getClient$config$log === void 0 ? void 0 : (_getClient$config$log2 = _getClient$config$log.warn) === null || _getClient$config$log2 === void 0 ? void 0 : _getClient$config$log2.call(_getClient$config$log, message);\n}\n\nfunction minimizeContractInterface(config) {\n  try {\n    const minimizedAbi = config.abi.filter(x => x.type === 'function' && x.name === config.functionName);\n    if (minimizedAbi.length === 0) throw new Error('Invalid ABI');\n    return minimizedAbi;\n  } catch (error) {\n    const abi = Contract.getInterface(config.abi).format(FormatTypes.full);\n    const minimizedInterface = Array.isArray(abi) ? abi : [abi];\n    return minimizedInterface.filter(i => i.includes(config.functionName));\n  }\n}\n\nfunction isPlainArray(value) {\n  return Array.isArray(value) && Object.keys(value).length === value.length;\n}\n\nfunction parseContractResult(_ref) {\n  let {\n    abi,\n    data,\n    functionName\n  } = _ref;\n\n  if (data && isPlainArray(data)) {\n    var _fragment$outputs;\n\n    const iface = Contract.getInterface(abi);\n    const fragment = iface.getFunction(functionName);\n    const isTuple = (((_fragment$outputs = fragment.outputs) === null || _fragment$outputs === void 0 ? void 0 : _fragment$outputs.length) || 0) > 1;\n    const data_ = isTuple ? data : [data];\n    const encodedResult = iface.encodeFunctionResult(functionName, data_);\n    const decodedResult = iface.decodeFunctionResult(functionName, encodedResult);\n    return isTuple ? decodedResult : decodedResult[0];\n  }\n\n  return data;\n}\n\n/**\n * [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20)\n */\nconst erc20ABI = [{\n  type: 'event',\n  name: 'Approval',\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  type: 'event',\n  name: 'Transfer',\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'allowance',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'spender',\n    type: 'address'\n  }],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'approve',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'balanceOf',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'account',\n    type: 'address'\n  }],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'decimals',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'uint8'\n  }]\n}, {\n  type: 'function',\n  name: 'name',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'symbol',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'totalSupply',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'transfer',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'transferFrom',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'sender',\n    type: 'address'\n  }, {\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }]\n}];\n/**\n * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)\n * for tokens (ie. Maker) that use bytes32 instead of string.\n */\n\nconst erc20ABI_bytes32 = [{\n  type: 'event',\n  name: 'Approval',\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  type: 'event',\n  name: 'Transfer',\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'allowance',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'spender',\n    type: 'address'\n  }],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'approve',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'balanceOf',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'account',\n    type: 'address'\n  }],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'decimals',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'uint8'\n  }]\n}, {\n  type: 'function',\n  name: 'name',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'bytes32'\n  }]\n}, {\n  type: 'function',\n  name: 'symbol',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'bytes32'\n  }]\n}, {\n  type: 'function',\n  name: 'totalSupply',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'transfer',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'transferFrom',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'sender',\n    type: 'address'\n  }, {\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }]\n}];\n/**\n * [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721)\n */\n\nconst erc721ABI = [{\n  type: 'event',\n  name: 'Approval',\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'tokenId',\n    type: 'uint256'\n  }]\n}, {\n  type: 'event',\n  name: 'ApprovalForAll',\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'operator',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'approved',\n    type: 'bool'\n  }]\n}, {\n  type: 'event',\n  name: 'Transfer',\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'tokenId',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'approve',\n  stateMutability: 'payable',\n  inputs: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: []\n}, {\n  type: 'function',\n  name: 'balanceOf',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'account',\n    type: 'address'\n  }],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'getApproved',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'address'\n  }]\n}, {\n  type: 'function',\n  name: 'isApprovedForAll',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'operator',\n    type: 'address'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'name',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'ownerOf',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: 'owner',\n    type: 'address'\n  }]\n}, {\n  type: 'function',\n  name: 'safeTransferFrom',\n  stateMutability: 'payable',\n  inputs: [{\n    name: 'from',\n    type: 'address'\n  }, {\n    name: 'to',\n    type: 'address'\n  }, {\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: []\n}, {\n  type: 'function',\n  name: 'safeTransferFrom',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'from',\n    type: 'address'\n  }, {\n    name: 'to',\n    type: 'address'\n  }, {\n    name: 'id',\n    type: 'uint256'\n  }, {\n    name: 'data',\n    type: 'bytes'\n  }],\n  outputs: []\n}, {\n  type: 'function',\n  name: 'setApprovalForAll',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'operator',\n    type: 'address'\n  }, {\n    name: 'approved',\n    type: 'bool'\n  }],\n  outputs: []\n}, {\n  type: 'function',\n  name: 'symbol',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'tokenByIndex',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'index',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'tokenByIndex',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'index',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: 'tokenId',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'tokenURI',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'totalSupply',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'transferFrom',\n  stateMutability: 'payable',\n  inputs: [{\n    name: 'sender',\n    type: 'address'\n  }, {\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'tokeId',\n    type: 'uint256'\n  }],\n  outputs: []\n}];\n/**\n * [Multicall3](https://github.com/mds1/multicall)\n */\n\nconst multicallABI = [{\n  inputs: [{\n    components: [{\n      name: 'target',\n      type: 'address'\n    }, {\n      name: 'allowFailure',\n      type: 'bool'\n    }, {\n      name: 'callData',\n      type: 'bytes'\n    }],\n    name: 'calls',\n    type: 'tuple[]'\n  }],\n  name: 'aggregate3',\n  outputs: [{\n    components: [{\n      name: 'success',\n      type: 'bool'\n    }, {\n      name: 'returnData',\n      type: 'bytes'\n    }],\n    name: 'returnData',\n    type: 'tuple[]'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}];\n\n// https://github.com/ethers-io/ethers.js/blob/master/packages/units/src.ts/index.ts#L10-L18\nconst units = ['wei', 'kwei', 'mwei', 'gwei', 'szabo', 'finney', 'ether'];\n\nasync function connect(_ref) {\n  let {\n    chainId,\n    connector\n  } = _ref;\n  const client = getClient();\n  const activeConnector = client.connector;\n  if (connector.id === (activeConnector === null || activeConnector === void 0 ? void 0 : activeConnector.id)) throw new ConnectorAlreadyConnectedError();\n\n  try {\n    client.setState(x => ({ ...x,\n      status: 'connecting'\n    }));\n    const data = await connector.connect({\n      chainId\n    });\n    client.setLastUsedConnector(connector.id);\n    client.setState(x => ({ ...x,\n      connector,\n      chains: connector === null || connector === void 0 ? void 0 : connector.chains,\n      data,\n      status: 'connected'\n    }));\n    client.storage.setItem('connected', true);\n    return { ...data,\n      connector\n    };\n  } catch (err) {\n    client.setState(x => {\n      return { ...x,\n        // Keep existing connector connected in case of error\n        status: x.connector ? 'connected' : 'disconnected'\n      };\n    });\n    throw err;\n  }\n}\n\nasync function disconnect() {\n  const client = getClient();\n  if (client.connector) await client.connector.disconnect();\n  client.clearState();\n  client.storage.removeItem('connected');\n}\n\nasync function fetchToken(_ref) {\n  let {\n    address,\n    chainId,\n    formatUnits: units = 'ether'\n  } = _ref;\n\n  async function fetchToken_(_ref2) {\n    let {\n      abi\n    } = _ref2;\n    const erc20Config = {\n      address,\n      abi,\n      chainId\n    };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [{ ...erc20Config,\n        functionName: 'decimals'\n      }, { ...erc20Config,\n        functionName: 'name'\n      }, { ...erc20Config,\n        functionName: 'symbol'\n      }, { ...erc20Config,\n        functionName: 'totalSupply'\n      }]\n    });\n    return {\n      address,\n      decimals,\n      name: name,\n      // protect against `ResolvedConfig['BytesType']`\n      symbol: symbol,\n      // protect against `ResolvedConfig['BytesType']`\n      totalSupply: {\n        formatted: formatUnits(totalSupply, units),\n        value: totalSupply\n      }\n    };\n  }\n\n  try {\n    return await fetchToken_({\n      abi: erc20ABI\n    });\n  } catch (err) {\n    // In the chance that there is an error upon decoding the contract result,\n    // it could be likely that the contract data is represented as bytes32 instead\n    // of a string.\n    if (err instanceof ContractResultDecodeError) {\n      const {\n        name,\n        symbol,\n        ...rest\n      } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: parseBytes32String(name),\n        symbol: parseBytes32String(symbol),\n        ...rest\n      };\n    }\n\n    throw err;\n  }\n}\n\nfunction getContract(_ref) {\n  let {\n    address,\n    abi,\n    signerOrProvider\n  } = _ref;\n  return new Contract$1(address, abi, signerOrProvider);\n} ////////////////////////////////////////////////////////////////////////////////////////////////////\n// Contract\n// TODO: Add remaining properties\n\n/**\n * @description Prepares the parameters required for a contract write transaction.\n *\n * Returns config to be passed through to `writeContract`.\n *\n * @example\n * import { prepareWriteContract, writeContract } from '@wagmi/core'\n *\n * const config = await prepareWriteContract({\n *  address: '0x...',\n *  abi: wagmiAbi,\n *  functionName: 'mint',\n * })\n * const result = await writeContract(config)\n */\nasync function prepareWriteContract(_ref) {\n  let {\n    abi,\n    address,\n    args,\n    chainId,\n    functionName,\n    overrides,\n    signer: signer_\n  } = _ref;\n  const signer = signer_ ?? (await fetchSigner({\n    chainId\n  }));\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  const contract = getContract({\n    address,\n    abi: abi,\n    // TODO: Remove cast and still support `Narrow<TAbi>`\n    signerOrProvider: signer\n  });\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const populateTransactionFn = contract.populateTransaction[normalizedFunctionName];\n  if (!populateTransactionFn) throw new ContractMethodDoesNotExistError({\n    address,\n    functionName: normalizedFunctionName\n  });\n  const params = [...(args ?? []), ...(overrides ? [overrides] : [])];\n  const unsignedTransaction = await populateTransactionFn(...params);\n  const gasLimit = unsignedTransaction.gasLimit || (await signer.estimateGas(unsignedTransaction));\n  const minimizedAbi = minimizeContractInterface({\n    abi: abi,\n    // TODO: Remove cast and still support `Narrow<TAbi>`\n    functionName\n  });\n  return {\n    abi: minimizedAbi,\n    address,\n    chainId,\n    // TODO: Remove cast\n    functionName: functionName,\n    mode: 'prepared',\n    request: { ...unsignedTransaction,\n      gasLimit\n    }\n  };\n}\n\nfunction getWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  if (chainId) return client.getWebSocketProvider({\n    chainId\n  }) || client.webSocketProvider;\n  return client.webSocketProvider;\n}\n\nfunction watchProvider(args, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(getProvider(args));\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return unsubscribe;\n}\n\nfunction watchWebSocketProvider(args, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(getWebSocketProvider(args));\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      webSocketProvider\n    } = _ref;\n    return webSocketProvider;\n  }, handleChange);\n  return unsubscribe;\n}\n\nasync function multicall(_ref) {\n  let {\n    allowFailure = true,\n    chainId,\n    contracts,\n    overrides\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  if (!provider.chains) throw new ProviderChainsNotFound();\n  const chain = provider.chains.find(chain => chain.id === chainId) || provider.chains[0];\n  if (!chain) throw new ProviderChainsNotFound();\n  if (!(chain !== null && chain !== void 0 && chain.multicall)) throw new ChainDoesNotSupportMulticallError({\n    chain\n  });\n  if (typeof (overrides === null || overrides === void 0 ? void 0 : overrides.blockTag) === 'number' && (overrides === null || overrides === void 0 ? void 0 : overrides.blockTag) < chain.multicall.blockCreated) throw new ChainDoesNotSupportMulticallError({\n    blockNumber: overrides === null || overrides === void 0 ? void 0 : overrides.blockTag,\n    chain\n  });\n  const multicallContract = getContract({\n    address: chain.multicall.address,\n    abi: multicallABI,\n    signerOrProvider: provider\n  });\n  const calls = contracts.map(_ref2 => {\n    let {\n      address,\n      abi,\n      functionName,\n      ...config\n    } = _ref2;\n    const {\n      args\n    } = config || {};\n    const contract = getContract({\n      address,\n      abi\n    });\n    const params = args ?? [];\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n\n    try {\n      const contractFunction = contract[normalizedFunctionName];\n      if (!contractFunction) logWarn(`\"${normalizedFunctionName}\" is not in the interface for contract \"${address}\"`);\n      const callData = contract.interface.encodeFunctionData(normalizedFunctionName, params);\n      return {\n        target: address,\n        allowFailure,\n        callData\n      };\n    } catch (err) {\n      if (!allowFailure) throw err;\n      return {\n        target: address,\n        allowFailure,\n        callData: '0x'\n      };\n    }\n  });\n  const params = [...[calls], ...(overrides ? [overrides] : [])];\n  const results = await multicallContract.aggregate3( // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  ...params);\n  return results.map((_ref3, i) => {\n    let {\n      returnData,\n      success\n    } = _ref3;\n    const {\n      address,\n      abi,\n      args,\n      functionName\n    } = contracts[i];\n    const contract = getContract({\n      address,\n      abi: abi // TODO: Remove cast and still support `Narrow<TAbi>`\n\n    });\n    const normalizedFunctionName = normalizeFunctionName({\n      contract,\n      functionName,\n      args\n    });\n\n    if (!success) {\n      let error;\n\n      try {\n        contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);\n      } catch (err) {\n        error = new ContractMethodRevertedError({\n          address,\n          args,\n          chainId: chain.id,\n          functionName: normalizedFunctionName,\n          errorMessage: err.message\n        });\n        if (!allowFailure) throw error;\n        logWarn(error.message);\n      }\n\n      return null;\n    }\n\n    if (returnData === '0x') {\n      const error = new ContractMethodNoResultError({\n        address,\n        args,\n        chainId: chain.id,\n        functionName: normalizedFunctionName\n      });\n      if (!allowFailure) throw error;\n      logWarn(error.message);\n      return null;\n    }\n\n    try {\n      const result = contract.interface.decodeFunctionResult(normalizedFunctionName, returnData);\n      return Array.isArray(result) && result.length === 1 ? result[0] : result;\n    } catch (err) {\n      const error = new ContractResultDecodeError({\n        address,\n        args,\n        chainId: chain.id,\n        functionName: normalizedFunctionName,\n        errorMessage: err.message\n      });\n      if (!allowFailure) throw error;\n      logWarn(error.message);\n      return null;\n    }\n  });\n}\n\nasync function readContract(_ref) {\n  let {\n    address,\n    args,\n    chainId,\n    abi,\n    functionName,\n    overrides\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const contract = getContract({\n    address,\n    abi: abi,\n    // TODO: Remove cast and still support `Narrow<TAbi>`\n    signerOrProvider: provider\n  });\n  const normalizedFunctionName = normalizeFunctionName({\n    contract,\n    functionName,\n    args\n  });\n  const contractFunction = contract[normalizedFunctionName];\n  if (!contractFunction) throw new ContractMethodDoesNotExistError({\n    address,\n    functionName: normalizedFunctionName\n  });\n  const params = [...(args ?? []), ...(overrides ? [overrides] : [])];\n  return contractFunction === null || contractFunction === void 0 ? void 0 : contractFunction(...params);\n}\n\nasync function readContracts(_ref) {\n  let {\n    allowFailure = true,\n    contracts,\n    overrides\n  } = _ref;\n\n  try {\n    const provider = getProvider();\n    const contractsByChainId = contracts.reduce((contracts, contract, index) => {\n      const chainId = contract.chainId ?? provider.network.chainId;\n      return { ...contracts,\n        [chainId]: [...(contracts[chainId] || []), {\n          contract,\n          index\n        }]\n      };\n    }, {});\n\n    const promises = () => Object.entries(contractsByChainId).map(_ref2 => {\n      let [chainId, contracts] = _ref2;\n      return multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts.map(_ref3 => {\n          let {\n            contract\n          } = _ref3;\n          return contract;\n        }),\n        overrides\n      });\n    });\n\n    let results;\n\n    if (allowFailure) {\n      results = (await Promise.allSettled(promises())).map(result => {\n        if (result.status === 'fulfilled') return result.value;\n\n        if (result.reason instanceof ChainDoesNotSupportMulticallError) {\n          logWarn(result.reason.message);\n          throw result.reason;\n        }\n\n        return null;\n      }).flat();\n    } else {\n      results = (await Promise.all(promises())).flat();\n    } // Reorder the contract results back to the order they were\n    // provided in.\n\n\n    const resultIndexes = Object.values(contractsByChainId).map(contracts => contracts.map(_ref4 => {\n      let {\n        index\n      } = _ref4;\n      return index;\n    })).flat();\n    return results.reduce((results, result, index) => {\n      results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractResultDecodeError) throw err;\n    if (err instanceof ContractMethodNoResultError) throw err;\n    if (err instanceof ContractMethodRevertedError) throw err;\n\n    const promises = () => contracts.map(contract => readContract({ ...contract,\n      overrides\n    }));\n\n    if (allowFailure) return (await Promise.allSettled(promises())).map((result, i) => {\n      if (result.status === 'fulfilled') return result.value;\n      const {\n        address,\n        args,\n        chainId,\n        functionName\n      } = contracts[i];\n      const error = new ContractMethodRevertedError({\n        address,\n        functionName,\n        chainId: chainId ?? mainnet.id,\n        args,\n        errorMessage: result.reason\n      });\n      logWarn(error.message);\n      return null;\n    });\n    return await Promise.all(promises());\n  }\n}\n\nfunction watchContractEvent(_ref, callback) {\n  let {\n    address,\n    abi,\n    chainId,\n    eventName,\n    once\n  } = _ref;\n\n  const handler = function () {\n    return callback(...arguments);\n  };\n\n  let contract;\n\n  const watchEvent = async () => {\n    var _contract;\n\n    if (contract) (_contract = contract) === null || _contract === void 0 ? void 0 : _contract.off(eventName, handler);\n    const signerOrProvider = getWebSocketProvider({\n      chainId\n    }) || getProvider({\n      chainId\n    });\n    contract = getContract({\n      address,\n      abi: abi,\n      // TODO: Remove cast and still support `Narrow<TAbi>`\n      signerOrProvider\n    });\n    if (once) contract.once(eventName, handler);else contract.on(eventName, handler);\n  };\n\n  watchEvent();\n  const client = getClient();\n  const unsubscribe = client.subscribe(_ref2 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref2;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, watchEvent, {\n    equalityFn: shallow\n  });\n  return () => {\n    var _contract2;\n\n    (_contract2 = contract) === null || _contract2 === void 0 ? void 0 : _contract2.off(eventName, handler);\n    unsubscribe();\n  };\n}\n\nasync function fetchBlockNumber() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n}\n\nfunction watchBlockNumber(args, callback) {\n  // We need to debounce the listener as we want to opt-out\n  // of the behavior where ethers emits a \"block\" event for\n  // every block that was missed in between the `pollingInterval`.\n  // We are setting a wait time of 1 as emitting an event in\n  // ethers takes ~0.1ms.\n  const debouncedCallback = debounce(callback, 1);\n  let previousProvider;\n\n  const createListener = provider => {\n    if (previousProvider) {\n      var _previousProvider;\n\n      (_previousProvider = previousProvider) === null || _previousProvider === void 0 ? void 0 : _previousProvider.off('block', debouncedCallback);\n    }\n\n    provider.on('block', debouncedCallback);\n    previousProvider = provider;\n  };\n\n  const provider_ = getWebSocketProvider({\n    chainId: args.chainId\n  }) ?? getProvider({\n    chainId: args.chainId\n  });\n  if (args.listen) createListener(provider_);\n  let active = true;\n  const client = getClient();\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref;\n    return {\n      provider,\n      webSocketProvider\n    };\n  }, async _ref2 => {\n    let {\n      provider,\n      webSocketProvider\n    } = _ref2;\n    const provider_ = webSocketProvider ?? provider;\n\n    if (args.listen && !args.chainId && provider_) {\n      createListener(provider_);\n    }\n\n    const blockNumber = await fetchBlockNumber({\n      chainId: args.chainId\n    });\n    if (!active) return;\n    callback(blockNumber);\n  }, {\n    equalityFn: shallow\n  });\n  return () => {\n    var _previousProvider2;\n\n    active = false;\n    unsubscribe();\n    provider_ === null || provider_ === void 0 ? void 0 : provider_.off('block', debouncedCallback);\n    (_previousProvider2 = previousProvider) === null || _previousProvider2 === void 0 ? void 0 : _previousProvider2.off('block', debouncedCallback);\n  };\n}\n\nfunction watchMulticall(config, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(await multicall(config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : undefined;\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch === null || unwatch === void 0 ? void 0 : unwatch();\n  };\n}\n\nfunction watchReadContract(config, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(await readContract(config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : undefined;\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch === null || unwatch === void 0 ? void 0 : unwatch();\n  };\n}\n\nfunction watchReadContracts(config, callback) {\n  const client = getClient();\n\n  const handleChange = async () => callback(await readContracts(config));\n\n  const unwatch = config.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : undefined;\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      provider\n    } = _ref;\n    return provider;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch === null || unwatch === void 0 ? void 0 : unwatch();\n  };\n}\n\n/**\n * @description Fetches transaction for hash\n *\n * @example\n * import { fetchTransaction } from '@wagmi/core'\n *\n * const transaction = await fetchTransaction({\n *  chainId: 1,\n *  hash: '0x...',\n * })\n */\nasync function fetchTransaction(_ref) {\n  let {\n    chainId,\n    hash\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  return provider.getTransaction(hash);\n}\n\nasync function fetchEnsAddress(_ref) {\n  let {\n    chainId,\n    name\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const address = await provider.resolveName(name);\n\n  try {\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\nasync function fetchEnsAvatar(_ref) {\n  let {\n    addressOrName,\n    chainId\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  }); // TODO: Update with more advanced logic\n  // https://github.com/ensdomains/ens-avatar\n\n  const avatar = await provider.getAvatar(addressOrName);\n  return avatar;\n}\n\nasync function fetchEnsName(_ref) {\n  let {\n    address,\n    chainId\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  return provider.lookupAddress(address);\n}\n\nasync function fetchEnsResolver(_ref) {\n  let {\n    chainId,\n    name\n  } = _ref;\n  const provider = getProvider({\n    chainId\n  });\n  const resolver = await provider.getResolver(name);\n  return resolver;\n}\n\n/**\n * @description Prepares the parameters required for sending a transaction.\n *\n * Returns config to be passed through to `sendTransaction`.\n *\n * @example\n * import { prepareSendTransaction, sendTransaction } from '@wagmi/core'\n *\n * const config = await prepareSendTransaction({\n *  request: {\n *    to: 'moxey.eth',\n *    value: parseEther('1'),\n *  }\n * })\n * const result = await sendTransaction(config)\n */\nasync function prepareSendTransaction(_ref) {\n  let {\n    chainId,\n    request,\n    signer: signer_\n  } = _ref;\n  const signer = signer_ ?? (await fetchSigner({\n    chainId\n  }));\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  const [to, gasLimit] = await Promise.all([isAddress(request.to) ? Promise.resolve(request.to) : fetchEnsAddress({\n    name: request.to\n  }), request.gasLimit ? Promise.resolve(request.gasLimit) : signer.estimateGas(request)]);\n  if (!to) throw new Error('Could not resolve ENS name');\n  return { ...(chainId ? {\n      chainId\n    } : {}),\n    request: { ...request,\n      gasLimit,\n      to\n    },\n    mode: 'prepared'\n  };\n}\n\n/**\n * @description Function to send a transaction.\n *\n * It is recommended to pair this with the `prepareSendTransaction` function to avoid\n * [UX pitfalls](https://wagmi.sh/docs/prepare-hooks/intro#ux-pitfalls-without-prepare-hooks).\n *\n * @example\n * import { prepareSendTransaction, sendTransaction } from '@wagmi/core'\n *\n * const config = await prepareSendTransaction({\n *  to: 'moxey.eth',\n *  value: parseEther('1'),\n * })\n * const result = await sendTransaction(config)\n */\nasync function sendTransaction(_ref) {\n  let {\n    chainId,\n    mode,\n    request\n  } = _ref;\n\n  /********************************************************************/\n\n  /** START: iOS App Link cautious code.                              */\n\n  /** Do not perform any async operations in this block.              */\n\n  /** Ref: wagmi.sh/docs/prepare-hooks/intro#ios-app-link-constraints */\n\n  /********************************************************************/\n  // `fetchSigner` isn't really \"asynchronous\" as we have already\n  // initialized the provider upon user connection, so it will return\n  // immediately.\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n\n  if (mode === 'prepared') {\n    if (!request.gasLimit) throw new Error('`gasLimit` is required');\n    if (!request.to) throw new Error('`to` is required');\n  }\n\n  if (chainId) assertActiveChain({\n    chainId\n  });\n\n  try {\n    var _connectUnchecked, _ref2;\n\n    // Why don't we just use `signer.sendTransaction`?\n    // The `signer.sendTransaction` method performs async\n    // heavy operations (such as fetching block number)\n    // which is not really needed for our case.\n    // Having async heavy operations has side effects\n    // when using it in a click handler (iOS deep linking issues,\n    // delay to open wallet, etc).\n    const uncheckedSigner = (_connectUnchecked = (_ref2 = signer).connectUnchecked) === null || _connectUnchecked === void 0 ? void 0 : _connectUnchecked.call(_ref2);\n    const {\n      hash,\n      wait\n    } = await (uncheckedSigner ?? signer).sendTransaction(request);\n    /********************************************************************/\n\n    /** END: iOS App Link cautious code.                                */\n\n    /** Go nuts!                                                        */\n\n    /********************************************************************/\n\n    return {\n      hash: hash,\n      wait\n    };\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function waitForTransaction(_ref) {\n  let {\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait: wait_\n  } = _ref;\n  let promise;\n\n  if (hash) {\n    const provider = getProvider({\n      chainId\n    });\n    promise = provider.waitForTransaction(hash, confirmations, timeout);\n  } else if (wait_) promise = wait_(confirmations);else throw new Error('hash or wait is required');\n\n  return promise;\n}\n\n/**\n * @description Function to call a contract write method.\n *\n * It is recommended to pair this with the {@link prepareWriteContract} function\n * to avoid [UX pitfalls](https://wagmi.sh/docs/prepare-hooks/intro#ux-pitfalls-without-prepare-hooks).\n *\n * @example\n * import { prepareWriteContract, writeContract } from '@wagmi/core'\n *\n * const config = await prepareWriteContract({\n *   address: '0x...',\n *   abi: wagmiAbi,\n *   functionName: 'mint',\n * })\n * const result = await writeContract(config)\n */\nasync function writeContract(_ref) {\n  let {\n    address,\n    args,\n    chainId,\n    abi,\n    functionName,\n    mode,\n    overrides,\n    request: request_\n  } = _ref;\n\n  /****************************************************************************/\n\n  /** START: iOS App Link cautious code.                                      */\n\n  /** Do not perform any async operations in this block.                      */\n\n  /** Ref: https://wagmi.sh/docs/prepare-hooks/intro#ios-app-link-constraints */\n\n  /****************************************************************************/\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  if (mode === 'prepared') if (!request_) throw new Error('`request` is required');\n  const request = mode === 'recklesslyUnprepared' ? (await prepareWriteContract({\n    address,\n    args,\n    chainId,\n    abi: abi,\n    // TODO: Remove cast and still support `Narrow<TAbi>`\n    functionName,\n    overrides\n  })).request : request_;\n  const transaction = await sendTransaction({\n    request,\n    mode: 'prepared'\n  });\n  /********************************************************************/\n\n  /** END: iOS App Link cautious code.                                */\n\n  /** Go nuts!                                                        */\n\n  /********************************************************************/\n\n  return transaction;\n}\n\nasync function fetchBalance(_ref) {\n  var _chain$nativeCurrency, _chain$nativeCurrency2;\n\n  let {\n    addressOrName,\n    chainId,\n    formatUnits: unit,\n    token\n  } = _ref;\n  const client = getClient();\n  const provider = getProvider({\n    chainId\n  });\n\n  if (token) {\n    // Convert ENS name to address if required\n    let resolvedAddress;\n    if (isAddress(addressOrName)) resolvedAddress = addressOrName;else {\n      const address = await provider.resolveName(addressOrName); // Same error `provider.getBalance` throws for invalid ENS name\n\n      if (!address) logger.throwError('ENS name not configured', Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: `resolveName(${JSON.stringify(addressOrName)})`\n      });\n      resolvedAddress = address;\n    }\n\n    const fetchContractBalance = async _ref2 => {\n      let {\n        abi\n      } = _ref2;\n      const erc20Config = {\n        abi,\n        address: token,\n        chainId\n      };\n      const [value, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [{ ...erc20Config,\n          functionName: 'balanceOf',\n          args: [resolvedAddress]\n        }, { ...erc20Config,\n          functionName: 'decimals'\n        }, { ...erc20Config,\n          functionName: 'symbol'\n        }]\n      });\n      return {\n        decimals,\n        formatted: formatUnits(value ?? '0', unit ?? decimals),\n        symbol: symbol,\n        // protect against `ResolvedConfig['BytesType']`\n        value\n      };\n    };\n\n    try {\n      return await fetchContractBalance({\n        abi: erc20ABI\n      });\n    } catch (err) {\n      // In the chance that there is an error upon decoding the contract result,\n      // it could be likely that the contract data is represented as bytes32 instead\n      // of a string.\n      if (err instanceof ContractResultDecodeError) {\n        const {\n          symbol,\n          ...rest\n        } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: parseBytes32String(symbol),\n          ...rest\n        };\n      }\n\n      throw err;\n    }\n  }\n\n  const chains = [...(client.provider.chains || []), ...(client.chains ?? [])];\n  const value = await provider.getBalance(addressOrName);\n  const chain = chains.find(x => x.id === provider.network.chainId);\n  return {\n    decimals: (chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency = chain.nativeCurrency) === null || _chain$nativeCurrency === void 0 ? void 0 : _chain$nativeCurrency.decimals) ?? 18,\n    formatted: formatUnits(value ?? '0', unit ?? 'ether'),\n    symbol: (chain === null || chain === void 0 ? void 0 : (_chain$nativeCurrency2 = chain.nativeCurrency) === null || _chain$nativeCurrency2 === void 0 ? void 0 : _chain$nativeCurrency2.symbol) ?? 'ETH',\n    value\n  };\n}\n\nasync function fetchSigner() {\n  var _client$connector, _client$connector$get;\n\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = getClient();\n  const signer = (await ((_client$connector = client.connector) === null || _client$connector === void 0 ? void 0 : (_client$connector$get = _client$connector.getSigner) === null || _client$connector$get === void 0 ? void 0 : _client$connector$get.call(_client$connector, {\n    chainId\n  }))) || null;\n  return signer;\n}\n\nfunction getAccount() {\n  const {\n    data,\n    connector,\n    status\n  } = getClient();\n\n  switch (status) {\n    case 'connected':\n      return {\n        address: data === null || data === void 0 ? void 0 : data.account,\n        connector: connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n\n    case 'reconnecting':\n      return {\n        address: data === null || data === void 0 ? void 0 : data.account,\n        connector,\n        isConnected: !!(data !== null && data !== void 0 && data.account),\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n\n    case 'connecting':\n      return {\n        address: undefined,\n        connector: undefined,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n\n    case 'disconnected':\n      return {\n        address: undefined,\n        connector: undefined,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\nfunction getNetwork() {\n  var _client$data, _client$data$chain, _client$data2;\n\n  const client = getClient();\n  const chainId = (_client$data = client.data) === null || _client$data === void 0 ? void 0 : (_client$data$chain = _client$data.chain) === null || _client$data$chain === void 0 ? void 0 : _client$data$chain.id;\n  const activeChains = client.chains ?? [];\n  const activeChain = [...(client.provider.chains || []), ...activeChains].find(x => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    rpcUrls: {\n      default: ''\n    }\n  };\n  return {\n    chain: chainId ? { ...activeChain,\n      ...((_client$data2 = client.data) === null || _client$data2 === void 0 ? void 0 : _client$data2.chain),\n      id: chainId\n    } : undefined,\n    chains: activeChains\n  };\n}\n\nasync function signMessage(args) {\n  try {\n    const signer = await fetchSigner();\n    if (!signer) throw new ConnectorNotFoundError();\n    return await signer.signMessage(args.message);\n  } catch (error) {\n    if (error.code === 4001) throw new UserRejectedRequestError(error);\n    throw error;\n  }\n}\n\nasync function signTypedData(_ref) {\n  let {\n    domain,\n    types,\n    value\n  } = _ref;\n  const signer = await fetchSigner();\n  if (!signer) throw new ConnectorNotFoundError();\n  const {\n    chainId: chainId_\n  } = domain;\n  const chainId = chainId_ ? normalizeChainId(chainId_) : undefined;\n  if (chainId) assertActiveChain({\n    chainId\n  }); // Method name may be changed in the future, see https://docs.ethers.io/v5/api/signer/#Signer-signTypedData\n\n  return signer._signTypedData(domain, types, value);\n}\n\nasync function switchNetwork(_ref) {\n  let {\n    chainId\n  } = _ref;\n  const {\n    connector\n  } = getClient();\n  if (!connector) throw new ConnectorNotFoundError();\n  if (!connector.switchChain) throw new SwitchChainNotSupportedError({\n    connector\n  });\n  return connector.switchChain(chainId);\n}\n\nfunction watchAccount(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client = getClient();\n\n  const handleChange = () => callback(getAccount());\n\n  const unsubscribe = client.subscribe(_ref => {\n    let {\n      data,\n      connector,\n      status\n    } = _ref;\n    return selector({\n      address: data === null || data === void 0 ? void 0 : data.account,\n      connector,\n      status\n    });\n  }, handleChange, {\n    equalityFn: shallow\n  });\n  return unsubscribe;\n}\n\nfunction watchNetwork(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const client = getClient();\n\n  const handleChange = () => callback(getNetwork());\n\n  const unsubscribe = client.subscribe(_ref => {\n    var _data$chain;\n\n    let {\n      data,\n      chains\n    } = _ref;\n    return selector({\n      chainId: data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id,\n      chains\n    });\n  }, handleChange, {\n    equalityFn: shallow\n  });\n  return unsubscribe;\n}\n\nfunction watchSigner(_ref, callback) {\n  let {\n    chainId\n  } = _ref;\n  const client = getClient();\n\n  const handleChange = async () => callback(await fetchSigner({\n    chainId\n  }));\n\n  const unsubscribe = client.subscribe(_ref2 => {\n    var _data$chain;\n\n    let {\n      data,\n      connector\n    } = _ref2;\n    return {\n      account: data === null || data === void 0 ? void 0 : data.account,\n      chainId: data === null || data === void 0 ? void 0 : (_data$chain = data.chain) === null || _data$chain === void 0 ? void 0 : _data$chain.id,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: shallow\n  });\n  return unsubscribe;\n}\n\nasync function fetchFeeData() {\n  let {\n    chainId,\n    formatUnits: units = 'wei'\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = getProvider({\n    chainId\n  });\n  const feeData = await provider.getFeeData();\n  const formatted = {\n    gasPrice: feeData.gasPrice ? formatUnits(feeData.gasPrice, units) : null,\n    maxFeePerGas: feeData.maxFeePerGas ? formatUnits(feeData.maxFeePerGas, units) : null,\n    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas ? formatUnits(feeData.maxPriorityFeePerGas, units) : null\n  };\n  return { ...feeData,\n    formatted\n  };\n}\n\nexport { configureChains, connect, deepEqual, disconnect, erc20ABI, erc721ABI, fetchBalance, fetchBlockNumber, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, fetchFeeData, fetchSigner, fetchToken, fetchTransaction, getAccount, getContract, getNetwork, getWebSocketProvider, minimizeContractInterface, multicall, parseContractResult, prepareSendTransaction, prepareWriteContract, readContract, readContracts, sendTransaction, signMessage, signTypedData, switchNetwork, units, waitForTransaction, watchAccount, watchBlockNumber, watchContractEvent, watchMulticall, watchNetwork, watchProvider, watchReadContract, watchReadContracts, watchSigner, watchWebSocketProvider, writeContract };\n","function debounce(fn) {\n  let waitTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!waitTime) return fn(...args);\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      fn(...args);\n    }, waitTime);\n  };\n}\n\nexport { debounce as d };\n","import { l as Connector, _ as _classPrivateMethodInitSpec, t as _defineProperty, v as _classPrivateFieldInitSpec, n as normalizeChainId, U as UserRejectedRequestError, x as _classPrivateFieldGet, w as _classPrivateFieldSet, m as ChainNotConfiguredError, u as _classPrivateMethodGet, A as AddChainError, q as SwitchChainError } from '../../../dist/getProvider-2ff978f9.esm.js';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport 'zustand/middleware';\nimport 'zustand/vanilla';\nimport 'eventemitter3';\nimport '../../../dist/chains-1ebc77f8.esm.js';\nimport '../../../dist/rpcs-b4aa70b9.esm.js';\n\nvar _client = /*#__PURE__*/new WeakMap();\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _isUserRejectedRequestError = /*#__PURE__*/new WeakSet();\n\nclass CoinbaseWalletConnector extends Connector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n\n    _classPrivateMethodInitSpec(this, _isUserRejectedRequestError);\n\n    _defineProperty(this, \"id\", 'coinbaseWallet');\n\n    _defineProperty(this, \"name\", 'Coinbase Wallet');\n\n    _defineProperty(this, \"ready\", true);\n\n    _classPrivateFieldInitSpec(this, _client, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit('disconnect');\n    });\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      const provider = await this.getProvider();\n      provider.on('accountsChanged', this.onAccountsChanged);\n      provider.on('chainChanged', this.onChainChanged);\n      provider.on('disconnect', this.onDisconnect);\n      this.emit('message', {\n        type: 'connecting'\n      });\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]); // Switch to chain if provided\n\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    if (!_classPrivateFieldGet(this, _provider)) return;\n    const provider = await this.getProvider();\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: 'eth_accounts'\n    }); // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n\n  async getProvider() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      var _walletExtension;\n\n      let CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default; // Workaround for Vite dev import errors\n      // https://github.com/vitejs/vite/issues/7112\n\n      if (typeof CoinbaseWalletSDK !== 'function' && // @ts-expect-error This import error is not visible to TypeScript\n      typeof CoinbaseWalletSDK.default === 'function') CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n\n      _classPrivateFieldSet(this, _client, new CoinbaseWalletSDK(this.options));\n\n      const walletExtensionChainId = (_walletExtension = _classPrivateFieldGet(this, _client).walletExtension) === null || _walletExtension === void 0 ? void 0 : _walletExtension.getChainId();\n      const chain = this.chains.find(chain => this.options.chainId ? chain.id === this.options.chainId : chain.id === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || (chain === null || chain === void 0 ? void 0 : chain.id);\n      const jsonRpcUrl = this.options.jsonRpcUrl || (chain === null || chain === void 0 ? void 0 : chain.rpcUrls.default);\n\n      _classPrivateFieldSet(this, _provider, _classPrivateFieldGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = hexValue(chainId);\n\n    try {\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        rpcUrls: {\n          default: ''\n        }\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.id === chainId);\n      if (!chain) throw new ChainNotConfiguredError(); // Indicates chain is not added to provider\n\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [chain.rpcUrls.public ?? chain.rpcUrls.default],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, addError)) throw new UserRejectedRequestError(addError);\n          throw new AddChainError();\n        }\n      }\n\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n\n  async watchAsset(_ref2) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref2;\n    const provider = await this.getProvider();\n    return provider.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n\n}\n\nfunction _isUserRejectedRequestError2(error) {\n  return /(user rejected)/i.test(error.message);\n}\n\nexport { CoinbaseWalletConnector };\n","import { I as InjectedConnector, _ as _classPrivateMethodInitSpec, t as _defineProperty, u as _classPrivateMethodGet, v as _classPrivateFieldInitSpec, w as _classPrivateFieldSet, c as ConnectorNotFoundError, x as _classPrivateFieldGet, g as getClient, U as UserRejectedRequestError, R as ResourceUnavailableError } from '../../../dist/getProvider-2ff978f9.esm.js';\nimport 'zustand/middleware';\nimport 'zustand/vanilla';\nimport 'ethers';\nimport 'ethers/lib/utils';\nimport 'eventemitter3';\nimport '../../../dist/chains-1ebc77f8.esm.js';\nimport '../../../dist/rpcs-b4aa70b9.esm.js';\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _UNSTABLE_shimOnConnectSelectAccount = /*#__PURE__*/new WeakMap();\n\nvar _getReady = /*#__PURE__*/new WeakSet();\n\nvar _findProvider = /*#__PURE__*/new WeakSet();\n\nclass MetaMaskConnector extends InjectedConnector {\n  constructor() {\n    let {\n      chains,\n      options: options_\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      name: 'MetaMask',\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n\n    _classPrivateMethodInitSpec(this, _findProvider);\n\n    _classPrivateMethodInitSpec(this, _getReady);\n\n    _defineProperty(this, \"id\", 'metaMask');\n\n    _defineProperty(this, \"ready\", typeof window != 'undefined' && !!_classPrivateMethodGet(this, _findProvider, _findProvider2).call(this, window.ethereum));\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldInitSpec(this, _UNSTABLE_shimOnConnectSelectAccount, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _this$options, _getClient$storage, _this$options2, _getClient$storage2;\n\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n\n      if (provider.on) {\n        provider.on('accountsChanged', this.onAccountsChanged);\n        provider.on('chainChanged', this.onChainChanged);\n        provider.on('disconnect', this.onDisconnect);\n      }\n\n      this.emit('message', {\n        type: 'connecting'\n      }); // Attempt to show wallet select prompt with `wallet_requestPermissions` when\n      // `shimDisconnect` is active and account is in disconnected state (flag in storage)\n\n      if (_classPrivateFieldGet(this, _UNSTABLE_shimOnConnectSelectAccount) && (_this$options = this.options) !== null && _this$options !== void 0 && _this$options.shimDisconnect && !((_getClient$storage = getClient().storage) !== null && _getClient$storage !== void 0 && _getClient$storage.getItem(this.shimDisconnectKey))) {\n        const accounts = await provider.request({\n          method: 'eth_accounts'\n        }).catch(() => []);\n        const isConnected = !!accounts[0];\n        if (isConnected) await provider.request({\n          method: 'wallet_requestPermissions',\n          params: [{\n            eth_accounts: {}\n          }]\n        });\n      }\n\n      const account = await this.getAccount(); // Switch to chain if provided\n\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n\n      if ((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.shimDisconnect) (_getClient$storage2 = getClient().storage) === null || _getClient$storage2 === void 0 ? void 0 : _getClient$storage2.setItem(this.shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n\n  async getProvider() {\n    if (typeof window !== 'undefined') {\n      // TODO: Fallback to `ethereum#initialized` event for async injection\n      // https://github.com/MetaMask/detect-provider#synchronous-and-asynchronous-injection=\n      _classPrivateFieldSet(this, _provider, _classPrivateMethodGet(this, _findProvider, _findProvider2).call(this, window.ethereum));\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n}\n\nfunction _getReady2(ethereum) {\n  const isMetaMask = !!(ethereum !== null && ethereum !== void 0 && ethereum.isMetaMask);\n  if (!isMetaMask) return; // Brave tries to make itself look like MetaMask\n  // Could also try RPC `web3_clientVersion` if following is unreliable\n\n  if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) return;\n  if (ethereum.isTokenPocket) return;\n  if (ethereum.isTokenary) return;\n  if (ethereum.isAvalanche) return;\n  if (ethereum.isPortal) return;\n  return ethereum;\n}\n\nfunction _findProvider2(ethereum) {\n  if (ethereum !== null && ethereum !== void 0 && ethereum.providers) return ethereum.providers.find(_classPrivateMethodGet(this, _getReady, _getReady2));\n  return _classPrivateMethodGet(this, _getReady, _getReady2).call(this, ethereum);\n}\n\nexport { MetaMaskConnector };\n","import { l as Connector, _ as _classPrivateMethodInitSpec, t as _defineProperty, v as _classPrivateFieldInitSpec, n as normalizeChainId, g as getClient, u as _classPrivateMethodGet, U as UserRejectedRequestError, x as _classPrivateFieldGet, w as _classPrivateFieldSet, q as SwitchChainError } from '../../../dist/getProvider-2ff978f9.esm.js';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport 'zustand/middleware';\nimport 'zustand/vanilla';\nimport 'eventemitter3';\nimport '../../../dist/chains-1ebc77f8.esm.js';\nimport '../../../dist/rpcs-b4aa70b9.esm.js';\n\n/**\n * Wallets that support chain switching through WalletConnect\n * - imToken (token.im)\n * - MetaMask (metamask.io)\n * - Rainbow (rainbow.me)\n */\n\nconst switchChainAllowedRegex = /(imtoken|metamask|rainbow)/i;\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _switchChain = /*#__PURE__*/new WeakSet();\n\nclass WalletConnectConnector extends Connector {\n  constructor(config) {\n    super(config);\n\n    _classPrivateMethodInitSpec(this, _switchChain);\n\n    _defineProperty(this, \"id\", 'walletConnect');\n\n    _defineProperty(this, \"name\", 'WalletConnect');\n\n    _defineProperty(this, \"ready\", true);\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit('disconnect');\n    });\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _provider$connector, _provider$connector$p;\n\n      let targetChainId = chainId;\n\n      if (!targetChainId) {\n        const lastUsedChainId = getClient().lastUsedChainId;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;\n      }\n\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      provider.on('accountsChanged', this.onAccountsChanged);\n      provider.on('chainChanged', this.onChainChanged);\n      provider.on('disconnect', this.onDisconnect); // Defer message to the next tick to ensure wallet connect data (provided by `.enable()`) is available\n\n      setTimeout(() => this.emit('message', {\n        type: 'connecting'\n      }), 0);\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id); // Not all WalletConnect options support programmatic chain switching\n      // Only enable for wallet options that do\n\n      const walletName = ((_provider$connector = provider.connector) === null || _provider$connector === void 0 ? void 0 : (_provider$connector$p = _provider$connector.peerMeta) === null || _provider$connector$p === void 0 ? void 0 : _provider$connector$p.name) ?? '';\n      if (switchChainAllowedRegex.test(walletName)) this.switchChain = _classPrivateMethodGet(this, _switchChain, _switchChain2);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message)) throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect);\n    typeof localStorage !== 'undefined' && localStorage.removeItem('walletconnect');\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts; // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n\n  async getProvider() {\n    let {\n      chainId,\n      create\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    // Force create new provider\n    if (!_classPrivateFieldGet(this, _provider) || chainId || create) {\n      var _this$options, _this$options2;\n\n      const rpc = !((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.infuraId) ? this.chains.reduce((rpc, chain) => ({ ...rpc,\n        [chain.id]: chain.rpcUrls.default\n      }), {}) : {};\n      const WalletConnectProvider = (await import('@walletconnect/ethereum-provider')).default;\n\n      _classPrivateFieldSet(this, _provider, new WalletConnectProvider({ ...this.options,\n        chainId,\n        rpc: { ...rpc,\n          ...((_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.rpc)\n        }\n      }));\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n}\n\nasync function _switchChain2(chainId) {\n  const provider = await this.getProvider();\n  const id = hexValue(chainId);\n\n  try {\n    await provider.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: id\n      }]\n    });\n    return this.chains.find(x => x.id === chainId) ?? {\n      id: chainId,\n      name: `Chain ${id}`,\n      network: `${id}`,\n      rpcUrls: {\n        default: ''\n      }\n    };\n  } catch (error) {\n    const message = typeof error === 'string' ? error : error === null || error === void 0 ? void 0 : error.message;\n    if (/user rejected request/i.test(message)) throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n}\n\nexport { WalletConnectConnector };\n","import { providers } from 'ethers';\n\nfunction jsonRpcProvider(_ref) {\n  let {\n    priority,\n    rpc,\n    stallTimeout,\n    static: static_ = true,\n    weight\n  } = _ref;\n  return function (chain) {\n    const rpcConfig = rpc(chain);\n    if (!rpcConfig || rpcConfig.http === '') return null;\n    return {\n      chain: { ...chain,\n        rpcUrls: { ...chain.rpcUrls,\n          default: rpcConfig.http\n        }\n      },\n      provider: () => {\n        var _chain$ens;\n\n        const RpcProvider = static_ ? providers.StaticJsonRpcProvider : providers.JsonRpcProvider;\n        const provider = new RpcProvider(rpcConfig.http, {\n          ensAddress: (_chain$ens = chain.ens) === null || _chain$ens === void 0 ? void 0 : _chain$ens.address,\n          chainId: chain.id,\n          name: chain.network\n        });\n        return Object.assign(provider, {\n          priority,\n          stallTimeout,\n          weight\n        });\n      },\n      ...(rpcConfig.webSocket && {\n        webSocketProvider: () => new providers.WebSocketProvider(rpcConfig.webSocket, chain.id)\n      })\n    };\n  };\n}\n\nexport { jsonRpcProvider };\n","import type { Chain } from '@wagmi/core'\n\n// -- Avalanche ------------------------------------------------------- //\nexport const avalanche: Chain = {\n  id: 43_114,\n  name: 'Avalanche C-Chain',\n  network: 'avalanche',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Avalanche',\n    symbol: 'AVAX'\n  },\n  rpcUrls: {\n    default: 'https://api.avax.network/ext/bc/C/rpc'\n  },\n  blockExplorers: {\n    default: { name: 'SnowTrace', url: 'https://snowtrace.io' }\n  },\n  testnet: false\n}\n\nexport const avalancheFuji: Chain = {\n  id: 43_113,\n  name: 'Avalanche FUJI C-Chain',\n  network: 'avalancheFuji',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Avalanche',\n    symbol: 'AVAX'\n  },\n  rpcUrls: {\n    default: 'https://api.avax-test.network/ext/bc/C/rpc'\n  },\n  blockExplorers: {\n    default: { name: 'SnowTrace Testnet', url: 'https://testnet.snowtrace.io' }\n  },\n  testnet: true\n}\n\n// -- Binance --------------------------------------------------------- //\nexport const binanceSmartChain: Chain = {\n  id: 56,\n  name: 'Binance Smart Chain',\n  network: 'binanceSmartChain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Binance',\n    symbol: 'BNB'\n  },\n  rpcUrls: {\n    default: 'https://bsc-dataseed.binance.org'\n  },\n  blockExplorers: {\n    default: { name: 'BSC Scan', url: 'https://bscscan.com' }\n  },\n  testnet: false\n}\n\nexport const binanceSmartChainTestnet: Chain = {\n  id: 97,\n  name: 'Binance Smart Chain Testnet',\n  network: 'binanceSmartChainTestnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Binance',\n    symbol: 'BNB'\n  },\n  rpcUrls: {\n    default: 'https://data-seed-prebsc-1-s1.binance.org:8545'\n  },\n  blockExplorers: {\n    default: { name: 'BSC Scan testnet', url: 'https://testnet.bscscan.com' }\n  },\n  testnet: true\n}\n\n// -- Fantom ---------------------------------------------------------- //\nexport const fantom: Chain = {\n  id: 250,\n  name: 'Fantom Opera',\n  network: 'fantomOpera',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM'\n  },\n  rpcUrls: {\n    default: 'https://rpc.ankr.com/fantom'\n  },\n  blockExplorers: {\n    default: { name: 'FTM Scan', url: 'https://ftmscan.com' }\n  },\n  testnet: false\n}\n\nexport const fantomTestnet: Chain = {\n  id: 4_002,\n  name: 'Fantom Testnet',\n  network: 'fantomTestnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Fantom',\n    symbol: 'FTM'\n  },\n  rpcUrls: {\n    default: 'https://rpc.testnet.fantom.network'\n  },\n  blockExplorers: {\n    default: { name: 'FTM Scan Testnet', url: 'https://testnet.ftmscan.com' }\n  },\n  testnet: true\n}\n","export const NAMESPACE = 'eip155'\n","import { chain, InjectedConnector } from '@wagmi/core'\nimport { CoinbaseWalletConnector } from '@wagmi/core/connectors/coinbaseWallet'\nimport { MetaMaskConnector } from '@wagmi/core/connectors/metaMask'\nimport { WalletConnectConnector } from '@wagmi/core/connectors/walletConnect'\nimport { alchemyProvider } from '@wagmi/core/providers/alchemy'\nimport { infuraProvider } from '@wagmi/core/providers/infura'\nimport { jsonRpcProvider } from '@wagmi/core/providers/jsonRpc'\nimport { publicProvider } from '@wagmi/core/providers/public'\nimport type { GetDefaultConnectorsOpts, GetWalletConnectProviderOpts } from '../../types/apiTypes'\nimport {\n  avalanche,\n  avalancheFuji,\n  binanceSmartChain,\n  binanceSmartChainTestnet,\n  fantom,\n  fantomTestnet\n} from './chains'\nimport { NAMESPACE } from './constants'\n\n// -- utilities ------------------------------------------------------- //\nconst customChains = [\n  avalanche,\n  avalancheFuji,\n  binanceSmartChain,\n  binanceSmartChainTestnet,\n  fantom,\n  fantomTestnet\n]\n\n// -- providers ------------------------------------------------------- //\nfunction walletConnectProvider({ projectId }: GetWalletConnectProviderOpts) {\n  return jsonRpcProvider({\n    rpc: rpcChain => {\n      const customChain = customChains.find(c => c.id === rpcChain.id)\n\n      if (customChain)\n        return {\n          http: customChain.rpcUrls.default\n        }\n\n      return {\n        http: `https://rpc.walletconnect.com/v1/?chainId=${NAMESPACE}:${rpcChain.id}&projectId=${projectId}`\n      }\n    }\n  })\n}\n\nexport const providers = {\n  alchemyProvider,\n  infuraProvider,\n  jsonRpcProvider,\n  publicProvider,\n  walletConnectProvider\n}\n\n// -- chains ---------------------------------------------------------- //\n\nexport const chains = {\n  ...chain,\n  avalanche,\n  fantom,\n  binanceSmartChain,\n  avalancheFuji,\n  fantomTestnet,\n  binanceSmartChainTestnet\n}\n\n// -- connectors ------------------------------------------------------ //\nexport function defaultConnectors({ appName, chains: connectorChains }: GetDefaultConnectorsOpts) {\n  return [\n    new WalletConnectConnector({ chains: connectorChains, options: { qrcode: false } }),\n    new InjectedConnector({ chains: connectorChains, options: { shimDisconnect: true } }),\n    new CoinbaseWalletConnector({\n      chains: connectorChains,\n      options: { appName, headlessMode: true }\n    }),\n    new MetaMaskConnector({\n      chains: connectorChains,\n      options: {\n        shimDisconnect: true,\n        shimChainChangedDisconnect: false,\n        UNSTABLE_shimOnConnectSelectAccount: true\n      }\n    })\n  ]\n}\n","import { providers } from 'ethers';\nimport { b as defaultAlchemyApiKey } from '../../../dist/rpcs-b4aa70b9.esm.js';\n\nfunction alchemyProvider() {\n  let {\n    apiKey = defaultAlchemyApiKey,\n    priority,\n    stallTimeout,\n    weight\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (chain) {\n    if (!chain.rpcUrls.alchemy) return null;\n    return {\n      chain: { ...chain,\n        rpcUrls: { ...chain.rpcUrls,\n          default: `${chain.rpcUrls.alchemy}/${apiKey}`\n        }\n      },\n      provider: () => {\n        const provider = new providers.AlchemyProvider(chain.id, apiKey);\n        return Object.assign(provider, {\n          priority,\n          stallTimeout,\n          weight\n        });\n      },\n      webSocketProvider: () => new providers.AlchemyWebSocketProvider(chain.id, apiKey)\n    };\n  };\n}\n\nexport { alchemyProvider };\n","import { providers } from 'ethers';\nimport { d as defaultInfuraApiKey } from '../../../dist/rpcs-b4aa70b9.esm.js';\n\nfunction infuraProvider() {\n  let {\n    apiKey = defaultInfuraApiKey,\n    priority,\n    stallTimeout,\n    weight\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (chain) {\n    if (!chain.rpcUrls.infura) return null;\n    return {\n      chain: { ...chain,\n        rpcUrls: { ...chain.rpcUrls,\n          default: `${chain.rpcUrls.infura}/${apiKey}`\n        }\n      },\n      provider: () => {\n        const provider = new providers.InfuraProvider(chain.id, apiKey);\n        return Object.assign(provider, {\n          priority,\n          stallTimeout,\n          weight\n        });\n      },\n      webSocketProvider: () => new providers.InfuraWebSocketProvider(chain.id, apiKey)\n    };\n  };\n}\n\nexport { infuraProvider };\n","import { providers } from 'ethers';\n\nfunction publicProvider() {\n  let {\n    priority,\n    stallTimeout,\n    weight\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (chain) {\n    if (!chain.rpcUrls.default) return null;\n    return {\n      chain,\n      provider: () => {\n        const provider = new providers.StaticJsonRpcProvider(chain.rpcUrls.default, {\n          chainId: chain.id,\n          name: chain.network\n        });\n        return Object.assign(provider, {\n          priority,\n          stallTimeout,\n          weight\n        });\n      }\n    };\n  };\n}\n\nexport { publicProvider };\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport type * as WagmiTypes from '@wagmi/core'\nimport { chain, configureChains, createClient, getAccount } from '@wagmi/core'\nimport type { EthereumOptions } from '../../types/apiTypes'\nimport { defaultConnectors, providers } from './wagmiTools'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet client = undefined as WagmiTypes.Client<any, any> | undefined\n\nexport function getClient() {\n  return client\n}\n\nexport function initializeClient(projectId: string, options: EthereumOptions) {\n  const configChains = options.chains ?? [chain.mainnet]\n  const configProviders = options.providers ?? [providers.walletConnectProvider({ projectId })]\n  const configAutoConnect = options.autoConnect ?? true\n\n  const { chains, provider, webSocketProvider } = configureChains(configChains, configProviders)\n\n  const wagmiClient = createClient({\n    autoConnect: configAutoConnect,\n    connectors: defaultConnectors({ chains, appName: options.appName }),\n    provider,\n    webSocketProvider\n  })\n\n  if (!getAccount().isConnected)\n    // @ts-expect-error TODO(ilja) - remove this once wagmi issue is resolved\n    wagmiClient.setState({ ...wagmiClient.store.getState(), chains })\n\n  client = wagmiClient\n}\n","import type { Connector } from '@wagmi/core'\nimport {\n  connect,\n  disconnect,\n  fetchBalance,\n  fetchBlockNumber,\n  fetchEnsAddress,\n  fetchEnsAvatar,\n  fetchEnsName,\n  fetchEnsResolver,\n  fetchFeeData,\n  fetchSigner,\n  fetchToken,\n  fetchTransaction,\n  getAccount,\n  getContract,\n  getNetwork,\n  getProvider,\n  getWebSocketProvider,\n  prepareSendTransaction,\n  prepareWriteContract,\n  readContract,\n  sendTransaction,\n  signMessage,\n  signTypedData,\n  switchNetwork,\n  waitForTransaction,\n  watchAccount,\n  watchBlockNumber,\n  watchContractEvent,\n  watchNetwork,\n  watchProvider,\n  watchReadContract,\n  watchSigner,\n  watchWebSocketProvider,\n  writeContract\n} from '@wagmi/core'\nimport type { EthereumOptions } from '../types/apiTypes'\nimport { getClient, initializeClient } from './utils/wagmiHelpers'\n\nexport const Web3ModalEthereum = {\n  // -- config ------------------------------------------------------- //\n  createClient(projectId: string, options: EthereumOptions) {\n    initializeClient(projectId, options)\n\n    return this\n  },\n\n  // -- chains ------------------------------------------------------- //\n  getDefaultConnectorChainId(connector: Connector) {\n    const chainId = connector.chains[0].id\n\n    return chainId\n  },\n\n  // -- connectors --------------------------------------------------- //\n  getConnectorById(id: 'coinbaseWallet' | 'injected' | 'metaMask' | 'walletConnect') {\n    const connector = getClient()?.connectors.find(item => item.id === id)\n    if (!connector) throw new Error(`Missing ${id} connector`)\n\n    return connector\n  },\n\n  async connectWalletConnect(onUri: (uri: string) => void, selectedChainId?: number) {\n    const connector = this.getConnectorById('walletConnect')\n    const chainId = selectedChainId ?? this.getDefaultConnectorChainId(connector)\n\n    async function getProviderUri() {\n      return new Promise<void>(resolve => {\n        connector.once('message', async ({ type }) => {\n          if (type === 'connecting') {\n            const provider = await connector.getProvider()\n            onUri(provider.connector.uri)\n            resolve()\n          }\n        })\n      })\n    }\n\n    const [data] = await Promise.all([connect({ connector, chainId }), getProviderUri()])\n\n    return data\n  },\n\n  async connectLinking(onUri: (uri: string) => void, selectedChainId?: number) {\n    const connector = this.getConnectorById('walletConnect')\n    const chainId = selectedChainId ?? this.getDefaultConnectorChainId(connector)\n\n    async function getProviderUri() {\n      return new Promise<void>(resolve => {\n        connector.once('message', async ({ type }) => {\n          if (type === 'connecting') {\n            const provider = await connector.getProvider()\n            const wcUri: string = provider.connector.uri\n            onUri(encodeURIComponent(wcUri))\n            resolve()\n          }\n        })\n      })\n    }\n\n    const [data] = await Promise.all([connect({ connector, chainId }), getProviderUri()])\n\n    return data\n  },\n\n  async connectCoinbaseMobile(onUri?: (uri: string) => void, selectedChainId?: number) {\n    const connector = this.getConnectorById('coinbaseWallet')\n    const chainId = selectedChainId ?? this.getDefaultConnectorChainId(connector)\n\n    async function getProviderUri() {\n      return new Promise<void>(resolve => {\n        connector.once('message', async ({ type }) => {\n          if (type === 'connecting') {\n            const provider = await connector.getProvider()\n            onUri?.(provider.qrUrl)\n            resolve()\n          }\n        })\n      })\n    }\n\n    const [data] = await Promise.all([connect({ connector, chainId }), getProviderUri()])\n\n    return data\n  },\n\n  async connectCoinbaseExtension(selectedChainId?: number) {\n    const connector = this.getConnectorById('coinbaseWallet')\n    const chainId = selectedChainId ?? this.getDefaultConnectorChainId(connector)\n    const data = await connect({ connector, chainId })\n\n    return data\n  },\n\n  async connectMetaMask(selectedChainId?: number) {\n    const connector = this.getConnectorById('metaMask')\n    const chainId = selectedChainId ?? this.getDefaultConnectorChainId(connector)\n    const data = await connect({ connector, chainId })\n\n    return data\n  },\n\n  async connectInjected(selectedChainId?: number) {\n    const connector = this.getConnectorById('injected')\n    const chainId = selectedChainId ?? this.getDefaultConnectorChainId(connector)\n    const data = await connect({ connector, chainId })\n\n    return data\n  },\n\n  // -- accounts ----------------------------------------------------- //\n  getAccount,\n\n  watchAccount,\n\n  disconnect,\n\n  // -- network ------------------------------------------------------ //\n  getNetwork,\n\n  watchNetwork,\n\n  switchNetwork,\n\n  // -- block -------------------------------------------------------- //\n  fetchBlockNumber,\n\n  watchBlockNumber,\n\n  // -- provider ----------------------------------------------------- //\n  getProvider,\n\n  watchProvider,\n\n  getWebSocketProvider,\n\n  watchWebSocketProvider,\n\n  // -- balance ------------------------------------------------------ //\n  fetchBalance,\n\n  // -- signer ------------------------------------------------------- //\n  fetchSigner,\n\n  watchSigner,\n\n  signMessage,\n\n  signTypedData,\n\n  // -- fees ---------------------------------------------------------- //\n  fetchFeeData,\n\n  // -- ens ----------------------------------------------------------- //\n  fetchEnsAddress,\n\n  fetchEnsAvatar,\n\n  fetchEnsName,\n\n  fetchEnsResolver,\n\n  // -- token --------------------------------------------------------- //\n  fetchToken,\n\n  // -- transactions  ------------------------------------------------- //\n  fetchTransaction,\n\n  prepareSendTransaction,\n\n  sendTransaction,\n\n  waitForTransaction,\n\n  // -- contracts  ---------------------------------------------------- //\n  getContract,\n\n  readContract,\n\n  prepareWriteContract,\n\n  writeContract,\n\n  watchContractEvent,\n\n  watchReadContract\n}\n"],"names":["EtherSymbol","exports","Object","enumerable","get","contracts_1","bignumber_1","abstract_signer_1","wallet_1","providers_1","wordlists_1","logger_1","_version_1","logger","defaultAlchemyApiKey","defaultInfuraApiKey","alchemyRpcUrls","infuraRpcUrls","publicRpcUrls","mainnet","ropsten","rinkeby","goerli","kovan","sepolia","optimism","optimismKovan","optimismGoerli","polygon","polygonMumbai","arbitrum","arbitrumRinkeby","arbitrumGoerli","etherscanBlockExplorers","name","url","id","network","nativeCurrency","symbol","decimals","rpcUrls","alchemy","default","infura","public","blockExplorers","etherscan","ens","address","multicall","blockCreated","testnet","localhost","hardhat","foundry","chain","defaultChains","_checkPrivateRedeclaration","obj","privateCollection","has","TypeError","_classPrivateMethodInitSpec","privateSet","add","_classPrivateFieldInitSpec","privateMap","value","set","_defineProperty","key","defineProperty","configurable","writable","_classExtractFieldDescriptor","receiver","action","_classPrivateFieldGet","descriptor","call","_classApplyDescriptorGet","_classPrivateMethodGet","fn","_classPrivateFieldSet","_classApplyDescriptorSet","RpcError","code","message","internal","data","Number","isInteger","Error","ProviderRpcError","AddChainError","arguments","ChainDoesNotSupportMulticallError","_ref","blockNumber","ChainMismatchError","_ref2","activeChain","targetChain","ChainNotConfiguredError","ConnectorAlreadyConnectedError","ConnectorNotFoundError","ContractMethodDoesNotExistError","_ref3","_chain$blockExplorers","chainId","functionName","getProvider","chains","find","_ref4","blockExplorer","join","ContractMethodNoResultError","_ref5","args","JSON","stringify","abi","ContractMethodRevertedError","_ref6","errorMessage","ContractResultDecodeError","_ref7","ProviderChainsNotFound","ResourceUnavailableError","error","SwitchChainError","SwitchChainNotSupportedError","_ref8","connector","UserRejectedRequestError","getInjectedName","ethereum","_ethereum$providers","getName","provider","isAvalanche","isBitKeep","isBraveWallet","isCoinbaseWallet","isExodus","isFrame","isMathWallet","isOpera","isPortal","isTally","isTokenPocket","isTokenary","isTrust","isOneInchIOSWallet","isOneInchAndroidWallet","isMetaMask","providers","length","nameSet","Set","unknownCount","names","normalizeChainId","parseInt","trim","substring","Connector","options","values","map","x","this","some","EventEmitter","_provider","WeakMap","_switchingChains","InjectedConnector","undefined","options_","shimDisconnect","shimChainChangedDisconnect","window","accounts","emit","account","getAddress","unsupported","isChainUnsupported","_this$options","_this$options2","_getClient$storage","getClient","storage","removeItem","shimDisconnectKey","overrideName","detectedName","on","onAccountsChanged","onChainChanged","onDisconnect","type","getAccount","getChainId","switchChain","_this$options3","_getClient$storage2","setItem","isUserRejectedRequestError","removeListener","_this$options4","_getClient$storage3","request","method","then","Promise","all","getSigner","_this$options5","_getClient$storage4","getItem","_this$options6","hexValue","params","_data","_data$originalError","originalError","chainName","blockExplorerUrls","getBlockExplorerUrls","image","noopStorage","_key","_value","client","storeKey","_isAutoConnecting","_lastUsedConnector","_addEffects","WeakSet","Client","autoConnect","connectors","prefix","defaultState","parse","console","warn","err","createStorage","localStorage","_webSocketProvider","webSocketProvider","Map","config","_chainId","status","_JSON$parse","_JSON$parse$state","_data$chain","rawState","state","_error","store","create","subscribeWithSelector","persist","getWebSocketProvider","getStorage","partialize","_state$data","_state$data2","version","_addEffects2","setTimeout","getState","_this$data","_this$data$chain","subscribe","updater","newState","setState","_this$connector$disco","_this$connector","disconnect","clearState","destroy","_x$data","sorted","sort","connected","ready","isAuthorized","connect","bust","provider_","webSocketProvider_","webSocketProviders","_this$storage","lastUsedConnector","onChange","onError","prevConnector","_prevConnector$off","_prevConnector$off2","_prevConnector$off3","_connector$on","_connector$on2","_connector$on3","off","_data$chain2","fallbackProvider","targetQuorum","minQuorum","providers_","stallTimeout","chainProvider","index","priority","weight","_error$message","includes","assertActiveChain","_chains$find","_chains$find2","getNetwork","activeChainId","normalizeFunctionName","contract","functions","argsLength","overloadFunctions","keys","filter","startsWith","fragment","FunctionFragment","inputs","overloadFunction","every","arg","isArgOfType","abiParameter","argType","abiParameterType","isAddress","components","component","test","BigNumber","Uint8Array","Array","isArray","replace","logWarn","_getClient","_getClient$config$log","_getClient$config$log2","minimizeContractInterface","minimizedAbi","Contract","format","FormatTypes","i","erc20ABI","indexed","stateMutability","outputs","erc20ABI_bytes32","multicallABI","activeConnector","setLastUsedConnector","fetchToken_","erc20Config","readContracts","allowFailure","contracts","totalSupply","formatted","formatUnits","units","rest","parseBytes32String","getContract","signerOrProvider","Contract$1","prepareWriteContract","overrides","signer_","signer","fetchSigner","normalizedFunctionName","populateTransactionFn","populateTransaction","unsignedTransaction","gasLimit","estimateGas","mode","blockTag","multicallContract","calls","callData","interface","encodeFunctionData","target","aggregate3","results","returnData","success","decodeFunctionResult","result","readContract","contractFunction","contractsByChainId","reduce","promises","entries","allSettled","reason","flat","resultIndexes","fetchBlockNumber","getBlockNumber","watchBlockNumber","callback","previousProvider","debouncedCallback","timeout","waitTime","_len","clearTimeout","debounce","createListener","_previousProvider","listen","active","unsubscribe","equalityFn","shallow","_previousProvider2","hash","getTransaction","fetchEnsAddress","resolveName","addressOrName","getAvatar","avatar","lookupAddress","getResolver","resolver","to","resolve","sendTransaction","uncheckedSigner","_connectUnchecked","connectUnchecked","wait","confirmations","wait_","promise","waitForTransaction","request_","transaction","unit","token","resolvedAddress","Logger","operation","fetchContractBalance","getBalance","_chain$nativeCurrency","_chain$nativeCurrency2","_client$connector","_client$connector$get","isConnected","isConnecting","isDisconnected","isReconnecting","_client$data","_client$data$chain","_client$data2","activeChains","signMessage","domain","types","chainId_","_signTypedData","getFeeData","feeData","gasPrice","maxFeePerGas","maxPriorityFeePerGas","_client","_isUserRejectedRequestError","CoinbaseWalletConnector","reloadOnDisconnect","enable","close","CoinbaseWalletSDK","walletExtensionChainId","_walletExtension","walletExtension","jsonRpcUrl","makeWeb3Provider","_isUserRejectedRequestError2","_UNSTABLE_shimOnConnectSelectAccount","_getReady","_findProvider","MetaMaskConnector","_findProvider2","UNSTABLE_shimOnConnectSelectAccount","catch","eth_accounts","_getReady2","_events","_state","switchChainAllowedRegex","_switchChain","WalletConnectConnector","targetChainId","lastUsedChainId","walletName","_provider$connector","_provider$connector$p","peerMeta","_switchChain2","rpc","infuraId","WalletConnectProvider","jsonRpcProvider","static","static_","rpcConfig","http","_chain$ens","ensAddress","assign","webSocket","avalancheFuji","binanceSmartChain","binanceSmartChainTestnet","fantom","fantomTestnet","Ce","we","d","ve","be","p","customChains","avalanche","ye","alchemyProvider","apiKey","infuraProvider","publicProvider","walletConnectProvider","projectId","rpcChain","customChain","c","NAMESPACE","ge","__spreadProps","appName","connectorChains","qrcode","headlessMode","Be","Ee","m","je","Oe","u","initializeClient","configChains","_a","configProviders","_b","configAutoConnect","_c","pollingInterval","webSocketProviders_","configExists","apiConfig","chainProviders","formatter","formats","block","difficulty","_chainWebSocketProvid","chainWebSocketProviders","configureChains","wagmiClient","client_","createClient","defaultConnectors","Ne","Ae","Web3ModalEthereum","getDefaultConnectorChainId","getConnectorById","item","connectWalletConnect","onUri","selectedChainId","getProviderUri","once","uri","connectLinking","wcUri","encodeURIComponent","connectCoinbaseMobile","qrUrl","connectCoinbaseExtension","connectMetaMask","connectInjected","watchAccount","selector","handleChange","watchNetwork","switchNetwork","watchProvider","watchWebSocketProvider","fetchBalance","watchSigner","signTypedData","fetchFeeData","fetchEnsAvatar","fetchEnsName","fetchEnsResolver","fetchToken","fetchTransaction","prepareSendTransaction","writeContract","watchContractEvent","eventName","handler","watchEvent","_contract","_contract2","watchReadContract","unwatch","listenToBlock"],"sourceRoot":""}